{"version":3,"sources":["State/AuthContext.jsx","Components/Navbar.Component/Navbar.jsx","CustomHooks/getUserPreference.jsx","Components/Post.Component/Post.Component.jsx","Components/Skeleton.Component/Skeleton.Landing.Post.Component.jsx","State/PostsContext.jsx","Pages/Landing.Page/LandingPage.jsx","Components/Comment.Component/ReplyComment.jsx","Components/Comment.Component/Comment.jsx","Components/Skeleton.Component/Skeleton.Single.Post.Component.jsx","Pages/SinglePost.Page/SinglePostPage.jsx","Pages/Login.Page/LoginPage.jsx","Components/CompanyCard.Component/CompanyCard.jsx","Pages/AllCompanies.Page/AllCompanies.jsx","Components/Review.Component/ReviewComponent.jsx","Pages/CompanyDetails.Page/CompanyDetails.jsx","Pages/CreatePost.Page/CreatePost.jsx","CustomHooks/useDarkMode.jsx","Pages/Setting.Page/SettingPage.jsx","State/UserProfileContext.jsx","Pages/UserProfile.Page/UserProfile.jsx","Pages/UserProfile.Page/UserProfileComments.jsx","Pages/UserProfile.Page/UserProfileLiked.jsx","Pages/Search.Page/Search.jsx","Components/JobPostCard/JobPostCard.jsx","Pages/Jobs.Page/Hiring.jsx","Pages/CreateJob/CreateJob.jsx","Components/Navbar.Component/MobileNavbar.jsx","Pages/SignUp.Page/SignUp.jsx","App.js","index.js"],"names":["AuthContext","createContext","AuthProvider","children","useState","loggedIn","setLoggedIn","loggedInUserID","setUserID","loggedInUsername","setLoggedInUsername","checkUserLoggedIn","a","axios","get","withCredentials","data","isLoggedIn","username","userID","login","password","console","log","post","logUserIn","signup","email","logout","logOutUser","Provider","value","Navbar","useContext","history","useHistory","useEffect","userPreference","localStorage","getItem","root","window","document","documentElement","classList","add","remove","textSearch","setTextSearch","innerWidth","isMobileView","setIsMobileView","addEventListener","className","to","action","onSubmit","e","preventDefault","push","pointerEvents","type","onChange","target","placeholder","borderColor","size","PostComponent","props","liked_by","post_body","post_title","created_at","post_flair","post_id","comment_count","style","substr","color","fromNow","includes","length","SkeletonLandingPost","PostsContext","PostsProvider","posts","setPosts","getPostsFunction","LandingPage","toast","useToast","url","loading","isLoading","offset","setOffset","fetching","setFetching","fetchPosts","handleFetchPosts","prev","title","description","status","duration","isClosable","position","columnsCountBreakPoints","350","1020","gutter","map","onClick","ReplyComment","replyComment","replyEdit","replyDelete","isEditing","setIsEditing","comment_body","replyEditedComment","setReplyEditedComment","handleEditClick","comment_id","handleDeleteClick","componentDecorator","href","text","key","rel","user_id","Comment","createdAt","commentBody","deleteComment","updateComment","replyComments","commentID","isEdited","postID","useParams","comment","setComment","replying","isReplying","setReplyComment","filter","parent_comment_id","childrenComments","setChildrenComments","handleTopLevelEditClick","handleTopLevelDeleteClick","replyCommentAdd","parentCommentID","isSuccess","commentData","replyCommentEdit","replyCommentID","replyCreatorUsername","put","editedComment","wasUpdated","replyCommentDelete","wasDeleted","SkeletonSinglePost","disabled","SinglePostPage","postBody","setPostBody","postTitle","setPostTitle","postCreatedAt","setPostCreatedAt","postUsername","setPostUsername","setIsEdited","postFlair","setPostFlair","likedBy","setLikedBy","didUserLike","setDidUserLike","spamDisable","setSpamDisable","commentCount","setCommentCount","comments","setComments","setReplyComments","is_edited","setTimeout","fetchPost","handleCommentSubmit","handleUserLike","alert","error","message","handleUserDislike","ago","LoginPage","setUsername","setPassword","logInUser","backgroundColor","backgroundImage","backgroundSize","backgroundPosition","required","CompanyCard","companyName","companyIndustry","companyImage","companyID","companyLocation","companyRating","totalReviews","companySize","companyWebsite","companyAbout","src","alt","Math","round","AllCompanies","companies","setCompanies","companySearch","setCompanySearch","getCompanies","company","company_about","company_logo","companyFounded","company_founded","company_industry","company_id","company_location","company_rating","company_name","company_size","company_website","total_reviews","ReviewComponent","reviewTitle","reviewCreatedAt","reviewRating","reviewUser","reviewCons","reviewPros","reviewUserPosition","CompanyDetails","pros","setPros","cons","setCons","setTitle","setPosition","rating","setRating","companyDetails","setCompanyDetails","reviews","setReviews","handleReviewSubmit","reviewDetails","response","goBack","getCompanyDetails","min","max","review","review_created_at","review_title","review_pros","review_cons","review_rating","user_position","review_id","CreatePost","body","setBody","flair","setFlair","addPost","bg","label","togglePreference","setItem","SettingPage","bio","setBio","location","setLocation","setCompany","jobTitle","setJobTitle","oldPassword","setOldPassword","newPassword","setNewPassword","reNewPassword","setReNewPassword","userDetails","job_title","getUserDetails","updateUserDetails","didUpdate","changePassword","clickedLogout","htmlFor","useDarkMode","UserProfileContext","UserProfileProvider","userInContext","setUser","userPosts","setUserPosts","userComments","setUserComments","userSavedPosts","setUserSavedPosts","userLikedPosts","setUserLikedPosts","getUserPostsFunction","user","getUserCommentsFunction","getUserLikesFunction","getUserSavedFunction","PostPreview","UserProfile","CommentsPreview","parent_postid","UserProfileComments","Search","search","useLocation","queries","queryString","parse","q","getQueryPosts","JobPostCard","isApproved","jobLocation","jobCompany","jobCreatedAt","jobApplyAt","hasArrow","aria-label","Hiring","jobs","setJobs","handleJobSearch","getJobs","bgColor","height","paddingRight","job","jobID","job_id","jobDesc","job_desc","job_apply_at","job_company","job_created_at","job_location","CreateJob","keywords","setKeywords","applyURL","setApplyURL","maxLength","MobileNavbar","SignUpPage","setEmail","rePassword","setRePassword","App","setWidth","path","exact","component","UserProfileLiked","theme","extendTheme","colors","greenFlair","100","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.15f6e5d7.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport const AuthContext = createContext()\r\n\r\n\r\nexport const AuthProvider = ({children}) => {\r\n\r\n  const [loggedIn, setLoggedIn] = useState(false)\r\n  const [loggedInUserID, setUserID] = useState(null)\r\n  const [loggedInUsername, setLoggedInUsername] = useState(null)\r\n\r\n\r\n  const checkUserLoggedIn = async() => {\r\n    const { data } = await axios.get(`/api/auth/check-auth-status`, { withCredentials: true })\r\n    setLoggedIn(data.isLoggedIn)\r\n    setLoggedInUsername(data.username)\r\n    setUserID(data.userID)\r\n  }\r\n\r\n  const login = async(username,password) => { \r\n    try{\r\n      console.log('helo')\r\n      const { data } = await axios.post(`/api/auth/login`, { username, password }, {withCredentials: true})\r\n      setLoggedIn(data.logUserIn)\r\n      setLoggedInUsername(data.username)\r\n      setUserID(data.userID)\r\n\r\n      return data.logUserIn\r\n    } catch(err) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  const signup = async(email, password, username) => {\r\n    const { data } = await axios.post(`/api/auth/signup`, { email, password, username }, { withCredentials: true })\r\n    setLoggedIn(data.logUserIn)\r\n    return data.logUserIn\r\n  }\r\n\r\n  const logout = async() => {\r\n    const { data } = await axios.get(`/api/auth/logout`, {withCredentials: true})\r\n    if(data.logOutUser){\r\n      setLoggedIn(false)\r\n      setUserID(null)\r\n      return true\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <AuthContext.Provider value={\r\n      {\r\n        loggedIn,\r\n        login, \r\n        signup,\r\n        checkUserLoggedIn,\r\n        loggedInUsername,\r\n        loggedInUserID,\r\n        logout\r\n      }\r\n    }>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport GetUserPreference from '../../CustomHooks/getUserPreference'\r\nimport { AuthContext } from '../../State/AuthContext'\r\nimport { BsPerson } from 'react-icons/bs'\r\nimport { IoCreateOutline } from 'react-icons/io5'\r\nimport { Input, InputGroup, InputLeftElement } from \"@chakra-ui/react\"\r\nimport { AiOutlineSearch } from 'react-icons/ai'\r\n\r\nconst Navbar = () => {\r\n  const { loggedIn } = useContext(AuthContext)\r\n  const history = useHistory()\r\n\r\n  GetUserPreference()\r\n\r\n  const [textSearch, setTextSearch] = useState('')\r\n  const [isMobileView, setIsMobileView] = useState(window.innerWidth > 750 ? false : true)\r\n\r\n  const handleTextSearch = e => {\r\n    e.preventDefault()\r\n    setTextSearch('')\r\n    history.push(`/search?q=${textSearch}`)\r\n  }\r\n\r\n  window.addEventListener('resize', () => {\r\n    setIsMobileView(window.innerWidth > 750 ? false : true)\r\n  })\r\n\r\n\r\n\r\n\r\n  return (\r\n    <nav  \r\n    className=\"dark:bg-dark-post dark:border-transparent dark:border-dark-flair\r\n    transition-all duration-500 flex top-0 sticky bottom-0 z-50  w-auto bg-white font-noto h-16 border-b-2 border-gray-300\">\r\n      <div className=\"w-11/12 m-auto flex justify-between items-center    \">\r\n        <div className=\"flex flex-grow items-center\">\r\n          <Link to=\"/\" className='dark:bg-dark-flair w-auto dark:text-white font-bold text-xl py-2 px-4 bg-blue-special text-white rounded-lg'>{isMobileView ? \"A\" : \"Andha\"}</Link>\r\n          <form action=\"\" onSubmit={handleTextSearch} className=\"h-full mx-4 w-full \">\r\n            <InputGroup>\r\n              <InputLeftElement\r\n                pointerEvents=\"none\"\r\n                children={<AiOutlineSearch className=\"dark:text-white text-black\" />}\r\n              />\r\n              <Input type=\"text\" value={textSearch} onChange={e => setTextSearch(e.target.value)} placeholder=\"Search\" className=\"dark:text-gray-300\" borderColor=\"gray.700\" />\r\n            </InputGroup>\r\n          </form>\r\n        </div>\r\n        <ul className=\"flex items-center\">\r\n          {\r\n            isMobileView ? (\r\n              \"\"\r\n            ) : (\r\n              <>\r\n                <li className=\"dark:text-white mx-2 text-black\">\r\n                  <Link to=\"/hiring\">\r\n                    <h1>Who's hiring</h1>\r\n                  </Link>\r\n                </li>\r\n                <li className=\"dark:text-white mx-2 text-black\">\r\n                  <Link to=\"/companies\">\r\n                    <h1>Reviews</h1>\r\n                  </Link>\r\n                </li>\r\n              </>\r\n            )\r\n          }\r\n\r\n          {\r\n            loggedIn ? \r\n              (\r\n                <>\r\n                  <li className=\"mx-2 dark:text-white text-black\">\r\n                    <Link to=\"/create\"> \r\n                      <IoCreateOutline size={24} />\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"dark:text-white text-black\">\r\n                    <Link to=\"/settings\">\r\n                      <BsPerson size={25} />\r\n                    </Link>\r\n                  </li>\r\n                </>\r\n              ) : \r\n              (\r\n                <>\r\n                  <li className=\"dark:text-white mx-2 text-black\">\r\n                    <Link to=\"/login\">\r\n                      <h1 className='font-bold text-md py-1 px-4 bg-green-flair text-white rounded-lg'>Login</h1>\r\n                    </Link>\r\n                  </li>\r\n                </>\r\n              )\r\n          }\r\n        </ul>\r\n          \r\n          \r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useEffect } from 'react'\r\n\r\nexport default function GetUserPreference(){\r\n  useEffect(() => {\r\n    const userPreference = localStorage.getItem('theme')\r\n\r\n    const root = window.document.documentElement\r\n\r\n\r\n    if(userPreference === 'dark') {\r\n      root.classList.add('dark')\r\n    } else {\r\n      root.classList.remove('dark')\r\n    }\r\n  },[])\r\n}","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Moment from 'react-moment'\r\nimport { BiTimeFive, BiUser } from 'react-icons/bi'\r\nimport { BsChat, BsHeart, BsHeartFill } from 'react-icons/bs'\r\nimport { AuthContext } from '../../State/AuthContext'\r\n\r\nconst PostComponent = ({props}) => {\r\n  const {loggedInUserID} = useContext(AuthContext)\r\n\r\n  const { liked_by, post_body, post_title, created_at, post_flair, username, post_id, comment_count } = props\r\n  return (\r\n    <article className=\"dark:bg-dark-post transition-all duration-500 w-full   bg-white font-noto rounded-lg shadow-lg\" style={{\"height\": \"fit-content\"}}>\r\n      <div className=\"w-11/12 m-auto py-8 \">\r\n          <div className=\" 3\">\r\n            <Link to={`/flair/${post_flair}`} className=\"flex  justify-start font-medium text-xs rounded-md text-white w-max  py-1.5 px-2\" style={{\"background-color\": \"#00AE81\"}} >\r\n              {post_flair}\r\n            </Link>\r\n            <Link to={`/post/${post_id}`}>\r\n              <h1 className=\"dark:text-white font-bold text-left justify-start flex mt-1.5 transition duration-300 ease-in-out text-xl text-gray-900 \" \r\n              >\r\n                {post_title}\r\n              </h1>\r\n            </Link>\r\n            <p className=\"dark:text-gray-400 w-full overflow-hidden max-h-72 text-gray-700 flex justify-start text-md whitespace-pre-wrap transition duration-300 text-left\"   >\r\n              {post_body?.substr(0, 170)}...\r\n            </p>\r\n\r\n            {/* <SkeletonStack /> */}\r\n            <div className=\"flex mt-5 transition-all duration-500\">\r\n\r\n              <div className=\"dark:bg-dark-flair transition-all duration-500 bg-light-flair flex items-center py-1.5 px-2 w-max rounded-md\">\r\n                <BiUser color={\"#fff\"} />\r\n                <Link to={`/user/${username}`} className=\"flex text-xs ml-1 items-center text-white \" >\r\n                  {username}\r\n                </Link>\r\n              </div>\r\n\r\n              <div className=\"dark:bg-dark-flair transition-all duration-500 bg-light-flair flex items-center py-1.5 px-2  w-max mx-2 rounded-md\" >\r\n                <BiTimeFive color={\"#fff\"} />\r\n                <p className=\"flex text-xs ml-1 items-center text-white \"  >\r\n                  <Moment fromNow >{created_at}</Moment>\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"dark:bg-dark-flair transition-all duration-500 bg-light-flair flex items-center w-max py-1.5 px-2  rounded-md\">\r\n                <BsChat color={\"#fff\"} />\r\n                <p className=\"flex text-xs ml-1 items-center text-white \" >\r\n                  {comment_count}\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"dark:bg-dark-flair transition-all duration-500 bg-light-flair flex  items-center w-auto px-2 py-1.5 ml-2  rounded-md\">\r\n                {\r\n                  liked_by.includes(loggedInUserID) ? (\r\n                    <BsHeartFill color={\"#fff\"} />\r\n                  ) : (<BsHeart color={\"#fff\"} />)\r\n                }\r\n                <p className=\"flex text-xs ml-1 items-center text-white \" >\r\n                  {liked_by.length}\r\n                </p>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n      </div>\r\n\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default PostComponent\r\n","import React from 'react'\r\n\r\nconst SkeletonLandingPost = () => (\r\n  <div className=\"dark:bg-dark-post bg-white transition-all duration-500\">\r\n    <div className=\"animate-pulse w-11/12 m-auto py-8\">\r\n      <div className=\" bg-green-flair w-20 h-7 rounded-md\"></div>\r\n      <div className=\" w-9/12 h-7 my-2 dark:bg-dark-flair bg-gray-400\"></div>\r\n      <div className=\"w-full h-28 dark:bg-dark-flair bg-gray-400\"></div>\r\n      <div className=\"flex mt-3\">\r\n        <div className=\"w-24 rounded-md h-8 mr-2 dark:bg-dark-flair bg-light-flair\"></div>\r\n        <div className=\"w-24 rounded-md h-8 mr-2 dark:bg-dark-flair bg-light-flair\"></div>\r\n        <div className=\"w-24 rounded-md h-8 mr-2 dark:bg-dark-flair bg-light-flair\"></div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  \r\n)\r\n\r\nexport default SkeletonLandingPost\r\n\r\n","import React, { createContext, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport const PostsContext = createContext()\r\n\r\nexport const PostsProvider = ({children}) => {\r\n\r\n  const [posts, setPosts] = useState([])\r\n\r\n\r\n\r\n  const getPostsFunction = async() => {\r\n      const { data } = await axios.get(`/api/posts`, { withCredentials: true })\r\n      setPosts(data.posts)\r\n      if(data.posts){\r\n        return true\r\n      }\r\n  }\r\n\r\n  // const getFreshBatchOfPosts = async() => {\r\n  //   const { data } = await axios.get('/api/posts', { withCredentials: true })\r\n  //     setPosts(data.posts)\r\n  //     return true\r\n  // }\r\n\r\n  return (\r\n    <PostsContext.Provider value={\r\n      {\r\n        getPostsFunction,\r\n        // getFreshBatchOfPosts,\r\n        posts,\r\n        setPosts\r\n      }\r\n    }>\r\n      {children}\r\n    </PostsContext.Provider>\r\n  )\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport PostComponent from '../../Components/Post.Component/Post.Component'\r\nimport Masonry, {ResponsiveMasonry} from \"react-responsive-masonry\"\r\nimport SkeletonLandingPost from '../../Components/Skeleton.Component/Skeleton.Landing.Post.Component'\r\nimport { PostsContext } from '../../State/PostsContext'\r\nimport {  useToast } from '@chakra-ui/toast'\r\nimport { AuthContext } from '../../State/AuthContext'\r\nimport { ImSpinner2 } from 'react-icons/im'\r\n\r\nconst LandingPage = () => {\r\n  const toast = useToast()\r\n  const { url } = useContext(AuthContext)\r\n  const { getPostsFunction, posts, setPosts } = useContext(PostsContext)\r\n\r\n  const [loading, isLoading] = useState(true)\r\n  const [offset, setOffset] = useState(1)\r\n  const [fetching, setFetching] = useState(false)\r\n  \r\n  useEffect(() => {\r\n    const fetchPosts = async() => {\r\n      isLoading(true)\r\n      const didGetPosts = getPostsFunction()\r\n      if(didGetPosts){\r\n        isLoading(false)\r\n      }\r\n    }\r\n    fetchPosts()\r\n  }, [])\r\n\r\n  const handleFetchPosts = async() => {\r\n    setOffset(prev => prev+1)\r\n    setFetching(true)\r\n    const { data } = await axios.get(`/api/posts?l=${offset}`)\r\n    setPosts([...posts, ...data.posts])\r\n    data.posts ? setFetching(false) : setFetching(false)\r\n    if(data.posts.length === 0){\r\n      toast(\r\n        {\r\n          title: \"We've reached the end\",\r\n          description: \"Looks like you've been through all the posts that we have to offer\",\r\n          status: \"info\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n          position: \"bottom-right\"\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  \r\n  return (\r\n    <section className=\"dark:bg-dark-primary font-noto transition-all duration-500 w-full min-h-screen h-full bg-white-bg\">\r\n      <div className=\"w-11/12 m-auto py-8\">\r\n        <div className=\"w-full \">\r\n\r\n          {loading ? \r\n            (\r\n              <ResponsiveMasonry columnsCountBreakPoints={{350: 1, 1020: 2}}>\r\n                <Masonry gutter=\"15px\">\r\n                    {[1,2,3,4,5,6].map((post) => (\r\n                        <SkeletonLandingPost />\r\n                    ))}\r\n                </Masonry>\r\n              </ResponsiveMasonry>\r\n            ) : (\r\n              <ResponsiveMasonry columnsCountBreakPoints={{350: 1, 1020: 2}}>\r\n                <Masonry gutter=\"15px\">\r\n                    {posts.map((post  ) => (\r\n                        <PostComponent props={post} key={post.post_id} />\r\n                    ))}\r\n                </Masonry>\r\n              </ResponsiveMasonry>\r\n            )\r\n          }\r\n          <div className=\"flex w-full justify-center\">\r\n            <button onClick={handleFetchPosts} className=\"py-3 px-5 text-sm font-bold rounded-md dark:text-white text-black bg-white shadow-md dark:bg-dark-post mt-10\">\r\n              {fetching ? (\r\n                <span className=\"flex items-center\">\r\n                  <ImSpinner2 className=\"text-white animate-spin mr-2 \" />\r\n                  Loading\r\n                </span>\r\n              ) : \"Load more\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default LandingPage\r\n","import React, { useContext, useState } from 'react'\r\nimport Moment from 'react-moment'\r\nimport axios from 'axios'\r\nimport Linkify from 'react-linkify';\r\nimport { AuthContext } from '../../State/AuthContext';\r\n\r\n\r\nconst ReplyComment = ({replyComment, replyEdit, replyDelete}) => {\r\n\r\n  const [isEditing, setIsEditing] = useState(false)\r\n  const [replyEditedComment, setReplyEditedComment] = useState(replyComment.comment_body)\r\n\r\n  const componentDecorator = (href, text, key) => (\r\n    <a href={href} className=\" dark:text-green-flair text-light-flair\" rel=\"noreferrer\" key={key} target=\"_blank\">\r\n      {text}\r\n    </a>\r\n  );\r\n\r\n  const handleEditClick = async() => {\r\n    console.log('here')\r\n    const didUpdateComment = await replyEdit(replyComment.comment_id, replyComment.username, replyEditedComment)\r\n    \r\n    if(didUpdateComment) {\r\n      setIsEditing(false)\r\n    }\r\n  }\r\n\r\n  const handleDeleteClick = async() => {\r\n    console.log('here del')\r\n    const didDeleteComment = await replyDelete(replyComment.comment_id, replyComment.username)\r\n\r\n    if(didDeleteComment){\r\n      setIsEditing(false)\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  const { loggedInUserID } = useContext(AuthContext)\r\n\r\n\r\n  return (\r\n    <article className=\"w-full mt-3 pl-5  font-noto\">\r\n      <div className=\"flex items-center\">\r\n        <h2 className=\"dark:text-gray-300 text-left text-gray-900 font-bold text-xs\">{replyComment.username} </h2>\r\n\r\n        \r\n        <p className=\"dark:text-gray-400 text-left text-xs ml-1  font-bold text-gray-700\">\r\n          <Moment fromNow >\r\n            {replyComment.created_at}\r\n          </Moment>\r\n        </p>\r\n      </div>\r\n      {\r\n        isEditing ? (\r\n          <>\r\n            <textarea value={replyEditedComment} onChange={e => setReplyEditedComment(e.target.value)} className=\"dark:border-gray-700 dark:text-white mt-2 w-full h-36 bg-transparent border-2 border-gray-400 rounded-md px-3 py-2 outline-none\"></textarea>\r\n            <div className=\"flex items-center\">\r\n              <button onClick={handleEditClick}  className=\"focus:outline-none outline-none text-md py-2 px-5 bg-green-flair rounded-md text-white\">Save</button>\r\n              <button onClick={handleDeleteClick}  className=\"focus:outline-none outline-none text-md py-2 px-5 bg-red-500 ml-3 rounded-md text-white\">Delete</button>\r\n              <button onClick={() => setIsEditing(false)}  className=\"focus:outline-none outline-none dark:bg-dark-flair bg-light-flair text-md py-2 px-5 text-white rounded-md ml-3\">Cancel</button>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"dark:text-gray-100  w-11/12 text-left text-gray-900 font-medium whitespace-pre-wrap\">\r\n\r\n            <Linkify  componentDecorator={componentDecorator}>\r\n              {replyComment.comment_body}\r\n            </Linkify>\r\n            </div>\r\n\r\n            \r\n            <div className=\"flex items-center\">\r\n            {loggedInUserID === replyComment.user_id ? (\r\n\r\n              <button onClick={() => setIsEditing(!isEditing)} className=\"dark:text-gray-400 focus:outline-none text-gray-700  font-bold text-xs\">Edit</button>\r\n            ) : \"\"}\r\n            </div>\r\n          </>\r\n          )\r\n      }\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default ReplyComment","import React, { useContext, useState } from 'react'\r\nimport { AuthContext } from '../../State/AuthContext'\r\nimport { useParams } from 'react-router-dom'\r\nimport Moment from 'react-moment'\r\nimport axios from 'axios'\r\nimport Linkify from 'react-linkify';\r\nimport Toast from '../Toast.Component/Toast.Component'\r\nimport ReplyComment from './ReplyComment'\r\nimport { useToast } from '@chakra-ui/react'\r\n\r\nconst Comment = ({ username, createdAt, commentBody, deleteComment, updateComment, replyComments, commentID, isEdited, userID }) => {\r\n  const toast = useToast()\r\n  const {postID} = useParams()\r\n\r\n  const [isEditing, setIsEditing] = useState(false)\r\n  const [comment, setComment] = useState(commentBody)\r\n  \r\n\r\n  const [replying, isReplying] = useState(false)\r\n  const [replyComment, setReplyComment] = useState('')\r\n\r\n  const [childrenComments, setChildrenComments] = useState(replyComments.filter(replyComment => replyComment.parent_comment_id === commentID))\r\n\r\n\r\n  const { loggedInUserID } = useContext(AuthContext)\r\n\r\n  const handleTopLevelCancelClick = () => {\r\n    setIsEditing(false)\r\n  }\r\n\r\n  const handleTopLevelEditClick = async() => {\r\n    const didUpdateComments = await updateComment(commentID, comment, username)\r\n    if(didUpdateComments) {\r\n      \r\n      setIsEditing(false)\r\n    }\r\n\r\n  }\r\n\r\n  const handleTopLevelDeleteClick = async() => {\r\n    const didDeleteComment = await deleteComment(commentID, username)\r\n    if(didDeleteComment) {\r\n      setIsEditing(false)\r\n    }\r\n  } \r\n\r\n  const componentDecorator = (href, text, key) => (\r\n    <a href={href} className=\" dark:text-green-flair text-light-flair\" key={key} target=\"_blank\">\r\n      {text}\r\n    </a>\r\n  );\r\n\r\n  const replyCommentAdd = async(e) => {\r\n    e.preventDefault()\r\n    const { data } = await axios.post(`/api/comments/reply`, {parentCommentID: commentID,replyComment, postID}, { withCredentials: true })\r\n    if (data.isSuccess) {\r\n      toast(\r\n        {\r\n          title: \"Added comment\",\r\n          status: \"success\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        }\r\n      )\r\n      setChildrenComments([data.commentData, ...childrenComments])\r\n      isReplying(false)\r\n      setReplyComment('')\r\n    }\r\n  }\r\n\r\n  const replyCommentEdit = async(replyCommentID, replyCreatorUsername, replyEditedComment) => {\r\n    const { data } = await axios.put(`/api/comments`, { commentID: replyCommentID, editedComment: replyEditedComment, username: replyCreatorUsername }, { withCredentials:true })\r\n    if(data.wasUpdated){\r\n      toast(\r\n        {\r\n          title: \"Edited comment\",\r\n          status: \"success\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        }\r\n      )\r\n      setChildrenComments([...childrenComments.filter(comment => comment.comment_id === replyCommentID ? comment.comment_body = replyEditedComment : comment)])\r\n      return true\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  const replyCommentDelete = async(replyCommentID, replyCreatorUsername) => {\r\n\r\n    const { data } = await axios.post(`/api/comments`, { commentID: replyCommentID,  username: replyCreatorUsername }, { withCredentials:true })\r\n    if(data.wasDeleted){\r\n      toast(\r\n        {\r\n          title: \"Deleted comment\",\r\n          status: \"success\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        }\r\n      )\r\n      setChildrenComments([...childrenComments.filter(comment => comment.comment_id === replyCommentID ? comment.comment_body = '[deleted]' : comment)])\r\n      return true\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <article className=\"w-full mt-2 mb-5 font-noto\">\r\n      <div className=\"flex items-center\">\r\n        <h2 className=\"dark:text-gray-300 text-left text-gray-900 font-bold text-xs\">{username} </h2>\r\n\r\n        <p className=\"dark:text-gray-400 text-left text-xs ml-1  font-bold text-gray-700\">\r\n          <Moment fromNow >\r\n            {createdAt}\r\n          </Moment>\r\n        </p>\r\n\r\n        {\r\n          isEdited ? (\r\n            <p className=\"dark:text-gray-400 text-left text-xs ml-1 italic font-bold text-gray-700\">(Edited)</p>\r\n          ) : ('')\r\n        }\r\n      </div>\r\n      {\r\n        isEditing ? (\r\n          <>\r\n            <textarea value={comment} onChange={e => setComment(e.target.value)} className=\"dark:border-gray-700 dark:text-white mt-2 w-full h-36 bg-transparent border-2 border-gray-400 rounded-md px-3 py-2 outline-none\"></textarea>\r\n            <div className=\"flex items-center\">\r\n              <button onClick={handleTopLevelEditClick} className=\"focus:outline-none outline-none text-md py-2 px-5 bg-green-flair rounded-md text-white\">Save</button>\r\n              <button onClick={handleTopLevelDeleteClick} className=\"focus:outline-none outline-none bg-red-500 text-md py-2 px-5 text-white rounded-md ml-3\">Delete</button>\r\n              <button onClick={handleTopLevelCancelClick} className=\"focus:outline-none outline-none dark:bg-dark-flair bg-light-flair text-md py-2 px-5 text-white rounded-md ml-3\">Cancel</button>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"dark:text-gray-100 mb-2 w-11/12 text-left text-gray-900 font-medium whitespace-pre-wrap\">\r\n\r\n            <Linkify  componentDecorator={componentDecorator}>\r\n              {commentBody}\r\n            </Linkify>\r\n            </div>\r\n\r\n            \r\n            <div className=\"flex items-center\">\r\n              <button onClick={() => isReplying(!replying)} className=\"dark:text-gray-400 focus:outline-none text-gray-700 font-bold text-xs mr-2\">Reply</button>\r\n              <button onClick={() => setIsEditing(!isEditing)} className=\"dark:text-gray-400 focus:outline-none text-gray-700 font-bold text-xs\">{loggedInUserID === userID ? (\"Edit\") : \"\"}</button>\r\n            </div>\r\n          </>\r\n          )\r\n      }\r\n      {\r\n        replying ? (\r\n          <form onSubmit={replyCommentAdd} className=\"flex flex-col justify-start ml-5 my-3\">\r\n            <textarea value={replyComment} onChange={e => setReplyComment(e.target.value)} className=\"dark:text-white text-md w-full px-3 py-2 text-gray-700 h-36 bg-transparent dark:border-gray-700 border-gray-400 border-2 rounded-lg resize-y  outline-none \" />\r\n            <div className=\"flex mt-2\">\r\n              <button onClick={replyCommentAdd} type='submit' className=\"focus:outline-none outline-none text-md py-2 px-5 bg-green-flair rounded-md text-white\">Save</button>\r\n              <button onClick={() => isReplying(false)} className=\"focus:outline-none outline-none dark:bg-dark-flair bg-light-flair text-md py-2 px-5 text-white rounded-md ml-3\">Cancel</button>\r\n            </div>\r\n          </form>\r\n        ) : (\r\n          ''\r\n        )\r\n      }\r\n      {/* NESTED COMMENTS RENDERING */}\r\n        {childrenComments.map(replyComment => (\r\n          <ReplyComment replyComment={replyComment} replyEdit={replyCommentEdit} replyDelete={replyCommentDelete}/>\r\n        ))}\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default Comment\r\n","\r\nconst SkeletonSinglePost = () => (\r\n  <div className=\"animate-pulse w-11/12 m-auto py-8\">\r\n    <div className=\" bg-green-flair w-20 h-7 rounded-md\"></div>\r\n    <div className=\" w-10/12 h-10 mt-2 mb-3 dark:bg-dark-flair bg-gray-400\"></div>\r\n    <div className=\"w-full h-56 dark:bg-dark-flair bg-gray-400\"></div>\r\n    <div className=\"flex mt-3 border-b-2 pb-5 dark:border-dark-flair border-gray-300\">\r\n      <div className=\"w-24 rounded-md h-8 mr-2 dark:bg-dark-flair bg-light-flair\"></div>\r\n      <div className=\"w-24 rounded-md h-8 mr-2 dark:bg-dark-flair bg-light-flair\"></div>\r\n      <div className=\"w-24 rounded-md h-8 mr-2 dark:bg-dark-flair bg-light-flair\"></div>\r\n    </div>\r\n\r\n    <form className=\"flex w-full m-auto pt-4 flex-col border-b-2 pb-5 dark:border-dark-flair border-gray-300\">\r\n      <textarea disabled className=\"dark:text-white text-md w-full px-3 py-2 text-gray-700 h-36 bg-transparent dark:border-gray-700 border-gray-400 border-2 rounded-lg resize-y  outline-none \" />\r\n      <button className=\" w-full mt-2 bg-green-flair py-2 cursor-not-allowed rounded-md duration-300 text-white hover:bg-opacity-90\">Submit</button>\r\n    </form>\r\n\r\n    \r\n  </div>\r\n)\r\n\r\nexport default SkeletonSinglePost","import React, { useContext, useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport Moment from 'react-moment'\r\nimport Linkify from 'react-linkify';\r\nimport Comment from '../../Components/Comment.Component/Comment'\r\nimport SkeletonSinglePost from '../../Components/Skeleton.Component/Skeleton.Single.Post.Component'\r\n\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport { BsChat, BsHeart, BsHeartFill } from 'react-icons/bs'\r\nimport { BiTimeFive, BiUser } from 'react-icons/bi'\r\nimport {ImCross} from 'react-icons/im'\r\nimport { AuthContext } from '../../State/AuthContext';\r\nimport { useToast } from '@chakra-ui/react'\r\n\r\nconst SinglePostPage = () => {\r\n  const toast = useToast()\r\n  const history = useHistory()\r\n  const { loggedIn, loggedInUserID } = useContext(AuthContext)\r\n  const { postID } = useParams()\r\n\r\n  const [postBody, setPostBody] = useState('')\r\n  const [postTitle, setPostTitle] = useState('')\r\n  const [postCreatedAt, setPostCreatedAt] = useState('')\r\n  const [postUsername, setPostUsername] = useState('')\r\n  const [isEdited, setIsEdited] = useState(false)\r\n  const [postFlair, setPostFlair] = useState('')\r\n  const [likedBy, setLikedBy] = useState()\r\n  const [didUserLike, setDidUserLike] = useState(false)\r\n  const [spamDisable, setSpamDisable] = useState(false)\r\n\r\n  const [comment, setComment] = useState('')\r\n  const [commentCount, setCommentCount] = useState(0)\r\n\r\n  const [comments, setComments] = useState([])\r\n  const [replyComments, setReplyComments] = useState([])\r\n\r\n  const [loading, isLoading] = useState(false)\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchPost = async() => {\r\n      isLoading(true)\r\n      const { data } = await axios.get(`/api/posts/${postID}`)\r\n      setPostBody(data.post.post_body)\r\n      setPostTitle(data.post.post_title)\r\n      setPostCreatedAt(data.post.created_at)\r\n      setIsEdited(data.post.is_edited)\r\n      setPostFlair(data.post.post_flair)\r\n      setPostUsername(data.post.username)\r\n      setLikedBy(data.post.liked_by.length)\r\n      setDidUserLike(data.post.liked_by.includes(loggedInUserID))\r\n\r\n  \r\n      //* TO GET ALL ROOT LEVEL COMMENTS ONLY\r\n      setComments(data.comments.filter(comment => comment.parent_comment_id === null))\r\n      setCommentCount(data.commentCount)\r\n\r\n      //* CONTAINS ALL NON PARENT COMMENTS, SO ROOT COMMENTS DONT HAVE TO SEARCH ORIGINAL COMMENTS ARRAY FOR CHILDREN\r\n      setReplyComments(data.comments.filter(comment => comment.parent_comment_id !== null))\r\n      if(data){\r\n        setTimeout(() => {\r\n\r\n          isLoading(false)\r\n        }, 900)\r\n      }\r\n    }\r\n\r\n    fetchPost(  )\r\n  }, [])\r\n\r\n  const handleCommentSubmit = async(e) => {\r\n    e.preventDefault()\r\n    try{\r\n      const { data } = await axios.post(`/api/comments/${postID}`, { comment }, {withCredentials: true})\r\n      \r\n      if(data.isSuccess){\r\n        toast(\r\n          {\r\n            title: \"Added comment\",\r\n            status: \"success\",\r\n            duration: 3000,\r\n            isClosable: true,\r\n          }\r\n        )\r\n        setComments([data.commentData, ...comments])\r\n        setCommentCount(prev => prev+1)\r\n        setComment('')\r\n      }\r\n    } catch(err) {\r\n      toast(\r\n        {\r\n          title: \" Could not add comment\",\r\n          status: \"error\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleEditClick = async(commentID, editedComment, username) => {\r\n    const { data } = await axios.put(`/api/comments`, { commentID, editedComment, username } , { withCredentials: true })\r\n    \r\n    if(data.wasUpdated) {\r\n      toast(\r\n        {\r\n          title: \"Edited comment\",\r\n          status: \"success\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        }\r\n      )\r\n      setComments([...comments.filter(comment => comment.comment_id === commentID ? comment.comment_body = editedComment : comment)])\r\n      return true\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  const handleDeleteClick = async(commentID, username) => {\r\n    const { data } = await axios.post(`/api/comments`, {commentID, username}, { withCredentials: true })\r\n    if(data.wasDeleted){\r\n      toast(\r\n        {\r\n          title: \"Deleted successful\",\r\n          status: \"success\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        }\r\n      )\r\n      setComments([...comments.filter(comment => comment.comment_id === commentID ? comment.comment_body = '[deleted]' : comment)])\r\n      return true\r\n    }else{\r\n      toast(\r\n        {\r\n          title: \"Could not delete comment\",\r\n          status: \"error\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  //*TO RECOGNISE LINKS IN A POST\r\n  const componentDecorator = (href, text, key) => (\r\n    <a href={href} className=\" dark:text-green-flair text-light-flair\" key={key} target=\"_blank\">\r\n      {text}\r\n    </a>\r\n  );\r\n\r\n  const handleExitClick = () => {\r\n      history.push('/')\r\n  }\r\n\r\n  const handleUserLike = async() => {\r\n    const { data } = await axios.get(`/api/posts/${postID}/like`, { withCredentials: true })\r\n    if(data.wasUpdated){\r\n      console.log(data)\r\n      setDidUserLike(true)\r\n      setLikedBy(data.likedBy.length)\r\n      setSpamDisable(true)\r\n      setTimeout(() => setSpamDisable(false), 1000)\r\n    } \r\n    else{\r\n      alert(data.error.message)\r\n    }\r\n  }\r\n\r\n  const handleUserDislike = async() => {\r\n    const { data } = await axios.get(`/api/posts/${postID}/dislike`, { withCredentials: true })\r\n    if(data.wasDeleted){\r\n      console.log(data)\r\n      setDidUserLike(false)\r\n      setLikedBy(data.likedBy.length)\r\n      setSpamDisable(true)\r\n      setTimeout(() => setSpamDisable(false), 1000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className=\"dark:bg-dark-primary font-noto w-full min-h-screen pt-7 pb-16 transition-all duration-500 bg-white-bg\">\r\n      <div className=\"dark:bg-dark-post w-11/12 m-auto h-full rounded-xl pb-6  transition-all duration-500 bg-white\">\r\n        {loading ? \r\n          (\r\n            <SkeletonSinglePost />\r\n          ) \r\n            : \r\n          (\r\n            <>\r\n              <div className=\" w-11/12 m-auto pt-10 border-b-2 pb-5 dark:border-dark-flair border-gray-300\">\r\n                <div className=\"flex justify-between\">\r\n                  <button to={`/flair/${postFlair}`} className=\"flex  justify-start font-medium text-xs rounded-md text-white w-max bg-green-flair  py-1.5 px-2\">\r\n                    {postFlair}\r\n                  </button>\r\n                  <Link onClick={handleExitClick} className=\"flex  items-center font-medium text-xs rounded-md text-white w-max  py-1.5 px-2 bg-green-flair\" >\r\n                    <ImCross />\r\n                  </Link>\r\n                </div>\r\n                <h1 className=\"dark:text-white pt-4 flex text-left justify-start font-black text-3xl text-gray-900\">\r\n                  <Linkify componentDecorator={componentDecorator}>\r\n                    {postTitle}\r\n                  </Linkify>\r\n                </h1>\r\n                <p className=\"dark:text-gray-300 text-gray-700 text-md whitespace-pre-wrap  text-left\">\r\n                <Linkify componentDecorator={componentDecorator}>\r\n                    {postBody}\r\n                  </Linkify>\r\n                </p>\r\n\r\n                <div className=\"flex mt-5\">\r\n                  <div className=\"dark:bg-dark-flair transition-all duration-500 bg-light-flair flex items-center py-1.5 px-2 w-max rounded-md\">\r\n                    <BiUser color={\"#fff\"} />\r\n                    <Link to={`/user/${postUsername}`} className=\"flex text-xs ml-1 items-center text-white \" >\r\n                      {postUsername}\r\n                    </Link>\r\n                  </div>\r\n\r\n                  <div className=\"dark:bg-dark-flair transition-all duration-500 bg-light-flair flex items-center py-1.5 px-2  w-max mx-2 rounded-md\" >\r\n                    <BiTimeFive color={\"#fff\"} />\r\n                    <p className=\"flex text-xs ml-1 items-center text-white \"  >\r\n                      <Moment fromNow ago>{postCreatedAt}</Moment>\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className=\"dark:bg-dark-flair transition-all duration-500 bg-light-flair flex items-center w-max py-1.5 px-2  rounded-md\">\r\n                    <BsChat color={\"#fff\"} />\r\n                    <p className=\"flex text-xs ml-1 items-center text-white \" >\r\n                      {commentCount}\r\n                    </p>\r\n                  </div>\r\n                  {\r\n                    didUserLike ? (\r\n\r\n                      <button onClick={handleUserDislike} className=\"dark:bg-dark-flair transition-all duration-500 bg-light-flair flex items-center w-max py-1.5 ml-2 px-2  rounded-md\">\r\n                        \r\n                        <BsHeartFill className=\"text-white \" />\r\n                        <p className=\"flex text-xs ml-1 items-center text-white \" >\r\n                          {likedBy}\r\n                        </p>\r\n                      </button>\r\n                    ) : (\r\n                      <button disabled={spamDisable} onClick={handleUserLike} className=\"dark:bg-dark-flair transition-all duration-500 bg-light-flair flex items-center w-max py-1.5 ml-2 px-2  rounded-md\">\r\n                        \r\n                        <BsHeart color={\"#fff\"} />\r\n                        <p className=\"flex text-xs ml-1 items-center text-white \" >\r\n                          {likedBy}\r\n                        </p>\r\n                      </button>\r\n                    )\r\n                  }\r\n                </div>\r\n              </div>\r\n              {\r\n                loggedIn ? \r\n                (\r\n                  <form onSubmit={handleCommentSubmit} className=\"flex w-11/12 m-auto pt-4 flex-col border-b-2 pb-5 dark:border-dark-flair border-gray-300\">\r\n                    <textarea value={comment} onChange={e => setComment(e.target.value)} className=\"dark:text-white text-md flex-g px-3 py-2 text-gray-900 h-36 bg-transparent dark:border-gray-700 hover:ring-green-flair resize-y border-gray-400 border rounded-lg outline-none focus:ring-2 focus:ring-green-flair\" />\r\n                    <button className=\" focus:outline-none w-full mt-2 bg-green-flair py-2 rounded-md duration-300 text-white hover:bg-opacity-90\">Submit</button>\r\n                  </form>\r\n                ) : \r\n                (\r\n                  <h1 className=\"text-xl w-11/12 m-auto my-3 text-black dark:text-gray-200 font-bold  border-b-2 pb-2 dark:border-dark-flair border-gray-300\">Login to be able to comment on posts</h1>\r\n                )\r\n              }\r\n              <div className=\"m-auto w-11/12 \">  \r\n                <h1 className=\"dark:text-white duration-500 transition-all text-gray-900 mt-3 font-black text-left text-2xl\">Comments</h1>\r\n                  {\r\n                    commentCount === 0 ? (\r\n                      <div className=\"flex flex-col py-20\">\r\n                        <h1 className=\"flex justify-center text-gray-900 dark:text-white font-black text-4xl\">Wow, such empty</h1>\r\n                        <p className=\"dark:text-gray-400 text-gray-700 flex justify-center text-lg whitespace-pre-wrap \"> Start off by saying something nice</p>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"flex flex-col pb-4\">\r\n                        {comments.map(comment => (\r\n                          <Comment key={comment.comment_id} userID={comment.user_id} isEdited={comment.is_edited} replyComments={replyComments} commentID={comment.comment_id} updateComment={handleEditClick} deleteComment={handleDeleteClick}  commentBody={comment.comment_body} username={comment.username} createdAt={comment.created_at} />\r\n                        ))}\r\n                      </div>\r\n                    )\r\n                  }\r\n              </div>\r\n          </>\r\n          )\r\n        }\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default SinglePostPage\r\n","import React, { useContext, useState } from 'react'\r\nimport { FcGoogle } from 'react-icons/fc'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { AuthContext } from '../../State/AuthContext'\r\nimport { useToast } from '@chakra-ui/toast'\r\nimport { ImSpinner2 } from 'react-icons/im'\r\nimport { AiFillHome } from 'react-icons/ai'\r\nconst LoginPage = () => {\r\n  const history = useHistory()\r\n  const toast = useToast()\r\n  const { login } = useContext(AuthContext)\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [fetching, setFetching] = useState(false)\r\n\r\n  const logInUser = async(e) => {\r\n    e.preventDefault()\r\n    setFetching(true)\r\n    const reRouteUser = await login(username, password)\r\n\r\n    if(reRouteUser){\r\n      toast(\r\n        {\r\n          title: \"Login successful\",\r\n          description: \"Hey there, welcome to Jobify\",\r\n          status: \"success\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        }\r\n      )\r\n      history.push('/')\r\n      setFetching(false)\r\n    }\r\n    else {\r\n      toast(\r\n        {\r\n          title: \"Login failed\",\r\n          description: \"Entered credentials are wrong\",\r\n          status: \"error\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        }\r\n      )\r\n      setFetching(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className=\"w-full font-noto\">\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 max-h-screen relative\">\r\n        <div className=\" hidden md:block col-span-2\" style={{\r\n          backgroundColor: \"#303067\",\r\n          backgroundImage:  \"linear-gradient(30deg, #444cf7 12%, transparent 12.5%, transparent 87%, #444cf7 87.5%, #444cf7), linear-gradient(150deg, #444cf7 12%, transparent 12.5%, transparent 87%, #444cf7 87.5%, #444cf7), linear-gradient(30deg, #444cf7 12%, transparent 12.5%, transparent 87%, #444cf7 87.5%, #444cf7), linear-gradient(150deg, #444cf7 12%, transparent 12.5%, transparent 87%, #444cf7 87.5%, #444cf7), linear-gradient(60deg, #444cf777 25%, transparent 25.5%, transparent 75%, #444cf777 75%, #444cf777), linear-gradient(60deg, #444cf777 25%, transparent 25.5%, transparent 75%, #444cf777 75%, #444cf777)\",\r\n          backgroundSize: \"48px 84px\",\r\n          backgroundPosition: \"0 0, 0 0, 24px 42px, 24px 42px, 0 0, 24px 42px\",\r\n        }} />\r\n        <div className=\"h-screen flex justify-center items-center \" style={{\"backgroundColor\": \"#303067\"}}>\r\n          <div className=\" w-9/12 m-auto \">\r\n          <div className=\"flex  h-full \">\r\n              <Link to=\"/\" className=\"bg-green-flair px-3 mr-2 rounded-sm flex items-center\">\r\n                <AiFillHome className=\"text-white\" />\r\n              </Link>\r\n              <h2 className=\"text-3xl text-left font-black text-white\">Login</h2>\r\n            </div>\r\n            <form onSubmit={logInUser} className=\"mt-7\">\r\n              <div className=\"flex flex-col\">\r\n                <label  className=\"text-xs text-gray-100 font-bold pl-2 pb-1 text-left \">Username</label>\r\n                <input required type=\"text\" value={username} onChange={e => setUsername(e.target.value)} className=\" text-sm flex-g px-3 py-2 text-white h-10 bg-transparent border-gray-400 border rounded-lg outline-none focus:ring-1 focus:ring-blue-400 font-semibold \" />\r\n              </div>\r\n              <div className=\"flex flex-col mt-3\">\r\n                <label  className=\"text-xs text-gray-100 font-bold pl-2 pb-1 text-left \">Password</label>\r\n                <input required type=\"password\" value={password} onChange={e => setPassword(e.target.value)} className=\" text-md flex-g px-3 py-2 text-white h-10 bg-transparent border-gray-400 border rounded-lg outline-none focus:ring-1 focus:ring-blue-400 \" />\r\n              </div>\r\n              <button type=\"submit\" className=\" focus:outline-none w-full mt-5 py-2 rounded-md duration-300 text-white hover:bg-opacity-90 flex items-center justify-center\" style={{backgroundColor: \"#454DF8\"}}>\r\n                {\r\n                  fetching ? (\r\n                    <>\r\n                      <ImSpinner2 className=\"text-white animate-spin mr-2\" />\r\n                      Submitting\r\n                    </>\r\n                  ) : \"Submit\"\r\n                }\r\n\r\n              </button>\r\n              <p className=\"text-left text-xs mt-1 text-white\">New here? Create an account <Link to=\"/signup\" className=\"text-blue-500\" style={{color: \"#454DF8\"}}> here</Link> </p>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default LoginPage\r\n","import React from 'react'\r\nimport { BiUser, BiStar, BiMapPin } from 'react-icons/bi'\r\nimport { CgWebsite } from 'react-icons/cg'\r\nimport { Link } from 'react-router-dom'\r\nconst CompanyCard = ({ companyName, companyIndustry, companyID, companyImage, companyLocation, companyRating, totalReviews, companySize, companyWebsite, companyAbout }) => {\r\n  return (\r\n    <article className=\"dark:bg-dark-post w-full duration-500 transition-all bg-white shadow-lg rounded-md mb-3\">\r\n      <div className=\" w-11/12 m-auto py-4\">\r\n        <div className=\"flex mb-1\">\r\n          <img src={companyImage} alt=\"company logo\" className=\" object-cover h-12 \" />\r\n          <div className=\"items-center flex ml-2\">\r\n            <div className=\"flex items-center mb-1\">\r\n              <Link to={`/companies/${companyName}`}>\r\n                <h1 className=\"dark:text-white font-bold text-xl text-left mr-2\">{companyName}</h1>\r\n              </Link>\r\n              <h2 className=\"text-xs font-medium bg-green-flair text-white px-2 py-1 rounded-md\" >{companyIndustry}</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <p className=\"dark:text-gray-400 text-left text-gray-700 text-md mb-3\">{companyAbout}</p>\r\n\r\n        <div className=\"grid grid-cols-2  gap-2 md:flex mt-1\">\r\n          <div className=\"dark:bg-dark-flair transition-all  duration-500 bg-light-flair flex items-center py-1.5 px-2 w-full md:w-max rounded-md\">\r\n            <BiStar color={\"#fff\"} />\r\n            <h2 className=\"flex text-xs ml-1 items-center text-white \" >\r\n              {Math.round(companyRating*10)/10} ({totalReviews} reviews)\r\n            </h2>\r\n          </div>\r\n          <div className=\"dark:bg-dark-flair transition-all  duration-500 bg-light-flair flex items-center py-1.5 px-2 w-full md:w-max rounded-md\">\r\n            <BiUser color={\"#fff\"} />\r\n            <h3 className=\"flex text-xs ml-1 items-center text-white \" >\r\n              {companySize}+\r\n            </h3>\r\n          </div>\r\n          <div className=\"dark:bg-dark-flair transition-all  duration-500 bg-light-flair flex items-center py-1.5 px-2 w-full md:w-max rounded-md\">\r\n            <CgWebsite color={\"#fff\"} />\r\n            <a href={companyWebsite} target=\"_blank\" rel=\"noreferrer\" className=\"flex text-xs ml-1 items-center text-white \" >\r\n              {companyWebsite}\r\n            </a>\r\n          </div>\r\n          <div className=\"dark:bg-dark-flair transition-all  duration-500 bg-light-flair flex items-center py-1.5 px-2 w-full md:w-max rounded-md\">\r\n            <BiMapPin color={\"#fff\"} />\r\n            <h2 className=\"flex text-xs ml-1 items-center text-white \" >\r\n              {companyLocation}\r\n            </h2>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default CompanyCard\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport CompanyCard from '../../Components/CompanyCard.Component/CompanyCard'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst AllCompanies = () => {\r\n  const history = useHistory()\r\n\r\n\r\n  const [companies, setCompanies] = useState([])\r\n  const [companySearch, setCompanySearch] = useState('')\r\n\r\n  useEffect(() => {\r\n    const getCompanies = async() => {\r\n      const { data } = await axios.get(`/api/companies`, { withCredentials: true })\r\n      setCompanies(data.companies)\r\n    }\r\n    getCompanies()\r\n  }, [])\r\n\r\n  const findCompany = (e) => {\r\n    e.preventDefault()\r\n    history.push(`/companies/${companySearch}`)\r\n  }\r\n\r\n  return (\r\n    <section className=\"dark:bg-dark-primary transition-all font-noto duration-500 w-full min-h-screen h-full bg-white-bg\">\r\n      <div className=\"w-11/12 m-auto py-8 \">\r\n        <h1 className=\" dark:text-white font-black text-left text-3xl\">Top companies</h1>\r\n        <p className=\"dark:text-gray-400 text-gray-700 flex justify-start text-md whitespace-pre-wrap  text-left\">Check out some of the top companies to work for considering many factors like competitive salaries, good WLB(work-life balance)</p>\r\n\r\n        <form onSubmit={findCompany} action=\"\" className=\"pt-4 grid grid-cols-1 md:flex items-center\">\r\n          <input type=\"text\" value={companySearch} onChange={e => setCompanySearch(e.target.value)} placeholder=\"Search your company\" className=\"dark:text-white text-md flex-g px-3 py-2 text-gray-900 h-12 w-full bg-transparent dark:border-gray-700 hover:ring-green-flair resize-y border-gray-400 border rounded-lg outline-none focus:ring-2 focus:ring-green-flair\" />\r\n          <button type=\"submit\" className=\"focus:outline-none px-12 mt-2 md:mt-0 md:ml-2 h-12 bg-green-flair py-2 rounded-md duration-300 text-white hover:bg-opacity-90\">Search</button>\r\n        </form>\r\n      <div className=\"py-4\">\r\n        {\r\n          companies.map(company => (\r\n            <CompanyCard key={company.company_id} companyAbout={company.company_about} companyImage={company.company_logo} companyFounded={company.company_founded} companyIndustry={company.company_industry} companyID={company.company_id} companyLocation={company.company_location} companyRating={company.company_rating} companyName={company.company_name} companySize={company.company_size} companyWebsite={company.company_website} totalReviews={company.total_reviews}  />\r\n            ))\r\n          }\r\n      </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default AllCompanies\r\n","import React from 'react'\r\nimport Moment from 'react-moment'\r\nimport { BiStar } from 'react-icons/bi'\r\nimport { GiTie } from 'react-icons/gi'\r\n\r\nconst ReviewComponent = ({reviewTitle, reviewCreatedAt ,reviewRating, reviewUser, reviewCons, reviewPros, reviewUserPosition}) => {\r\n  return (\r\n    <article className=\"w-full my-4 rounded-md dark:bg-dark-post bg-white duration-500 transition-all\">\r\n      <div className=\"w-11/12 m-auto py-5\">\r\n        <div className=\"flex items-center\">\r\n          <h2 className=\"dark:text-gray-100 text-left text-gray-900 font-bold text-lg\">{reviewTitle} ~</h2>\r\n          <span className=\"flex whitespace-pre-wrap\">\r\n            <h2 className=\"dark:text-gray-300 text-left text-gray-900 font-bold text-xs\"> {reviewUser} </h2>\r\n\r\n            <p className=\"dark:text-gray-400 text-left text-xs ml-1  font-bold text-gray-700\">\r\n              <Moment fromNow >\r\n                {reviewCreatedAt}\r\n              </Moment>\r\n            </p>\r\n          </span>\r\n        </div>\r\n        <div className=\"flex\">\r\n          <div className=\"dark:bg-dark-flair transition-all duration-500 bg-light-flair flex items-center py-1.5 px-2 w-max rounded-md\">\r\n            <BiStar color={\"#fff\"} />\r\n            <h2 className=\"flex text-xs ml-1 items-center text-white \" >\r\n              {Math.round(reviewRating*10)/10} \r\n            </h2>\r\n          </div>\r\n          <div className=\"dark:bg-dark-flair transition-all duration-500 bg-light-flair flex items-center py-1.5 px-2 ml-2 w-max rounded-md\">\r\n            <GiTie color={\"#fff\"} />\r\n            <h2 className=\"flex text-xs ml-1 items-center text-white\" >\r\n              {reviewUserPosition} \r\n            </h2> \r\n          </div>\r\n        </div>\r\n        <h2 className=\"dark:text-gray-100 text-left text-gray-900 font-bold text-sm mt-3\">Pros</h2>\r\n        <p className=\"dark:text-gray-300 mb-2 w-11/12 text-left text-gray-900 font-medium whitespace-pre-wrap\">{reviewPros}</p>\r\n        \r\n        <h2 className=\"dark:text-gray-100 text-left text-gray-900 font-bold text-sm mt-3\">Cons</h2>\r\n        <p className=\"dark:text-gray-300 mb-2 w-11/12 text-left text-gray-900 font-medium whitespace-pre-wrap\">{reviewCons}</p>\r\n\r\n      </div>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default ReviewComponent","import React, { useState, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { BiStar } from 'react-icons/bi'\r\nimport ReviewComponent from '../../Components/Review.Component/ReviewComponent'\r\nimport { toast, useToast } from '@chakra-ui/toast'\r\n\r\nconst CompanyDetails = () => {\r\n  const toast = useToast()\r\n  const history = useHistory()\r\n  const { companyName } = useParams()\r\n\r\n\r\n  const [pros, setPros] = useState('')\r\n  const [cons, setCons] = useState('')\r\n  const [title, setTitle] = useState(' ')\r\n  const [position, setPosition] = useState(' ')\r\n  const [rating, setRating] = useState(' ')\r\n  \r\n\r\n  const [companyDetails, setCompanyDetails] = useState({})\r\n  const [reviews, setReviews] = useState([])\r\n\r\n  const handleReviewSubmit = async(e) => {\r\n    e.preventDefault()\r\n    try {\r\n      const { data } = await axios.post(`/api/reviews/add`, \r\n      {\r\n        pros,\r\n        cons,\r\n        title,\r\n        rating, \r\n        companyName,\r\n        position\r\n      },\r\n      {withCredentials: true}\r\n      ) \r\n      if(data.reviewDetails){\r\n        setReviews([data.reviewDetails, ...reviews])\r\n        setPosition('')\r\n        setPros('')\r\n        setCons('')\r\n        setTitle('')\r\n        setRating('')\r\n        toast(\r\n          {\r\n            description: \"Successfully added review\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n            position: \"bottom-right\",\r\n            status: \"success\"\r\n          }\r\n        )\r\n      }\r\n\r\n\r\n    } catch(err){\r\n      toast(\r\n        {\r\n          title: \"Error\",\r\n          description: err.response.data.message,\r\n          duration: null,\r\n          isClosable: true,\r\n          position: \"bottom-right\",\r\n          status: \"error\"\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const getCompanyDetails = async() => {\r\n      const { data } = await axios.get(`/api/companies/${companyName}`)\r\n      if(data.companyDetails){\r\n        setCompanyDetails(data.companyDetails)\r\n        setReviews(data.reviews)\r\n      } else {\r\n\r\n        toast(\r\n          {\r\n            title: \"No such company exists in our database\",\r\n            description: \"You can write to us with relevant details @joshuatauro45@gmail.com\",\r\n            duration: null,\r\n            isClosable: true,\r\n            position: \"bottom-right\"\r\n          }\r\n        )\r\n        history.goBack()\r\n      }\r\n      \r\n    }\r\n    getCompanyDetails()\r\n  }, [])\r\n\r\n  return (\r\n    <section className='dark:bg-dark-primary font-noto w-full min-h-screen pt-7 pb-16 transition-all duration-500 bg-white-bg'>\r\n      <div className=\"dark:bg-dark-post dark:text-white transition-all duration-500 w-11/12 bg-white m-auto h-full rounded-md \">\r\n        <div className=\"pt-10 pb-5 w-11/12 m-auto\">\r\n          <div className=\"flex text-left\">\r\n            <img src={companyDetails.company_logo} alt=\"company logo\" className=\"object-contain h-20\" />\r\n            <div className=\"flex flex-col ml-3\">\r\n              <h1 className=\"font-black text-3xl\"> {companyDetails.company_name}</h1>\r\n              <div className=\"flex items-center \">\r\n                <BiStar className=\"text-gray-900 dark:text-white\" />\r\n                <p className=\"items-center pt-0.5 text-gray-700 dark:text-gray-400 text-sm\">{Math.round(companyDetails.company_rating*10)/10} ({companyDetails.total_reviews} reviews)</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-6 text-left \">\r\n            <h1 className=\"font-black text-2xl\">About {companyDetails.company_name}</h1>\r\n            <ul className=\"grid grid-cols-1 md:grid-cols-2 grid-rows-3 gap-0 md:gap-x-12 w-full md:w-10/12 lg:w-7/12  \">\r\n              <li className=\" mt-2 grid grid-cols-2  grid-rows-1 transition-all duration-500\">\r\n                <h2 className=\"dark:text-gray-400 text-gray-900 transition-all duration-500\">Website</h2>\r\n                <a href={companyDetails.company_website} target=\"_blank\" rel=\"noreferrer\" className=\"text-green-flair -ml-10\" >{companyDetails.company_website}</a>\r\n              </li>\r\n              <li className=\" mt-2 grid grid-cols-2 gap-x-0 grid-rows-1 transition-all duration-500\">\r\n                <h2 className=\"dark:text-gray-400 text-gray-900 transition-all duration-500\">Industry</h2>\r\n                <h2 className=\"dark:text-white text-black -ml-10\" >{companyDetails.company_industry}</h2>\r\n              </li>\r\n              <li className=\" mt-2 grid grid-cols-2  grid-rows-1 transition-all duration-500\">\r\n                <h2 className=\"dark:text-gray-400 text-gray-900 transition-all duration-500\">Location</h2>\r\n                <h2 className=\"dark:text-white text-black -ml-10\" >{companyDetails.company_location}</h2>\r\n              </li>\r\n              <li className=\"mt-2 grid grid-cols-2  grid-rows-1 transition-all duration-500\">\r\n                <h2 className=\"dark:text-gray-400 text-gray-900 transition-all duration-500\">Founded</h2>\r\n                <h2 className=\"dark:text-white text-black -ml-10\" >{companyDetails.company_founded}</h2>\r\n              </li>\r\n              <li className=\" mt-2 grid grid-cols-2  grid-rows-1 transition-all duration-500\">\r\n                <h2 className=\"dark:text-gray-400 text-gray-900 transition-all duration-500\">Size</h2>\r\n                <h2 className=\"dark:text-white text-black -ml-10\" >{companyDetails.company_size}+ Employee's</h2>\r\n              </li>\r\n              \r\n            </ul>\r\n            <p className=\"mt-4\">{companyDetails.company_about}</p>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n      <div className=\"dark:bg-dark-post dark:text-white transition-all duration-500 w-11/12 bg-white m-auto h-full rounded-md \">\r\n        <div className=\"mt-8 pb-5 w-11/12 m-auto\">\r\n          <div className=\"pt-6 text-left\">\r\n            <h1 className=\"font-black text-2xl mb-2\">Reviews</h1>\r\n            <form onSubmit={handleReviewSubmit} className=\"flex w-full pt-4 flex-col pb-5 dark:border-dark-flair \">\r\n              <div className=\"grid grid-cols-1 gap-2 md:grid-cols-5\">\r\n                <div className=\"flex w-full flex-col md:col-span-2\">\r\n                  <label className=\"text-sm dark:text-gray-300 text-gray-700 font-bold pl-4 pb-1\">Title*</label>\r\n                  <input value={title} onChange={e => setTitle(e.target.value)} className=\"dark:text-white text-md flex-g px-3 py-2 text-gray-900 h-10 bg-transparent dark:border-gray-700 hover:ring-green-flair border-gray-400 border rounded-lg outline-none focus:ring-2 focus:ring-green-flair\" />\r\n                </div>\r\n                <div className=\"flex flex-col md:col-span-2\">\r\n                  <label className=\"text-sm dark:text-gray-300 text-gray-700 font-bold pl-4 pb-1\">Position*</label>\r\n                  <input value={position} onChange={e => setPosition(e.target.value)} type=\"text\" className=\"dark:text-white text-md flex-g px-3 py-2 text-gray-900 h-10 bg-transparent dark:border-gray-700 hover:ring-green-flair border-gray-400 border rounded-lg outline-none focus:ring-2  focus:ring-green-flair\" />\r\n                </div>\r\n                <div className=\"flex flex-col\">\r\n                  <label className=\"text-sm dark:text-gray-300 text-gray-700 font-bold pl-4 pb-1\">Rating*</label>\r\n                  <input value={rating} onChange={e => setRating(e.target.value)} type=\"number\" min=\"1\" max=\"5\" className=\"dark:text-white text-md flex-g px-3 py-2 text-gray-900 h-10 bg-transparent dark:border-gray-700 hover:ring-green-flair border-gray-400 border rounded-lg outline-none focus:ring-2  focus:ring-green-flair\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"flex w-full flex-col mt-2\">\r\n                <label className=\"text-sm dark:text-gray-300 text-gray-700 font-bold pl-4 pb-1\">Pros*</label>\r\n                <textarea value={pros} onChange={e => setPros(e.target.value)} className=\"dark:text-white text-md flex-g px-3 py-2 text-gray-900 h-36 bg-transparent dark:border-gray-700 hover:ring-green-flair resize-y border-gray-400 border rounded-lg outline-none focus:ring-2 focus:ring-green-flair\" />\r\n              </div>\r\n              <div className=\"flex w-full flex-col mt-2 mb-2\">\r\n                <label className=\"text-sm dark:text-gray-300 text-gray-700 font-bold pl-4 pb-1\">Cons*</label>\r\n                <textarea value={cons} onChange={e => setCons(e.target.value)} className=\"dark:text-white text-md flex-g px-3 py-2 text-gray-900 h-36 bg-transparent dark:border-gray-700 hover:ring-green-flair resize-y border-gray-400 border rounded-lg outline-none focus:ring-2 focus:ring-green-flair\" />\r\n              </div>\r\n              <button onSubmit={handleReviewSubmit} className=\" focus:outline-none w-full mt-2 bg-green-flair py-2 rounded-md duration-300 text-white hover:bg-opacity-90\">Submit</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"w-11/12 m-auto\">\r\n      {\r\n              reviews.map(review => (\r\n                <ReviewComponent key={review.review_id} reviewCreatedAt={review.review_created_at} reviewTitle={review.review_title} reviewPros={review.review_pros} reviewCons={review.review_cons} reviewRating={review.review_rating} reviewUser={review.username} reviewUserPosition={review.user_position}/>\r\n              ))\r\n            }\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default CompanyDetails\r\n","import React, {useState, useEffect, useContext} from 'react'\r\nimport axios from 'axios'\r\nimport { Select } from \"@chakra-ui/react\"\r\nimport { useHistory } from 'react-router'\r\nimport { AuthContext } from '../../State/AuthContext'\r\n\r\nconst CreatePost = () => {\r\n  const {loggedIn} = useContext(AuthContext)\r\n\r\n  const history = useHistory()\r\n\r\n  const [title, setTitle] = useState('')\r\n  const [body, setBody] = useState('')\r\n  const [flair, setFlair] = useState('General')\r\n\r\n  const flairOptions = [\r\n    {value: \"Tech\", label: \"Tech\"},\r\n    {value: \"Finance\", label: \"Finance\"},\r\n    {value: \"Hardware & Semiconductor\", label: \"Hardware & Semiconductor\"},\r\n    {value: \"E-Commerce & Retail\", label: \"E-Commerce & Retail\"},\r\n    {value: \"Gaming\", label: \"Gaming\"},\r\n    {value: \"Auto\", label: \"Auto\"},\r\n    {value: \"Media & Entertainment\", label: \"Media & Entertainment\"},\r\n    {value: \"Telecom\", label: \"Telecom\"},\r\n    {value: \"Health\", label: \"Health\"},\r\n    {value: \"Aviation\", label: \"Aviation\"},\r\n    {value:\"General\" , label: \"General\"},\r\n    {value:\"Software Engineering\" , label: \"Software Engineering\"},\r\n    {value:\"Product Management\" , label: \"Product Management\"},\r\n    {value:\"Information Technology\" , label: \"Information Technology\"},\r\n    {value:\"Data Science & Analytics\" , label: \"Data Science & Analytics\"},\r\n    {value: \"Management Consulting\" , label:  \"Management Consulting\"},\r\n    {value:\"Design\" , label:\"Design\"},\r\n    {value:\"Sales\" , label: \"Sales\"},\r\n    {value:\"Security\" , label: \"Security\"},\r\n    {value:\"Investment Banking & Sell Side\" , label: \"Investment Banking & Sell Side\"},\r\n    {value: \"Marketing\" , label:  \"Marketing\"},\r\n    {value:\"Private Equity & Buy Side\" , label: \"Private Equity & Buy Side\"},\r\n    {value:\"Corporate Finance\" , label: \"Corporate Finance\"},\r\n    {value:\"Supply Chain\" , label: \"Supply Chain\"},\r\n    {value:\"Human Resources\" , label: \"Human Resources\"},\r\n    {value:\"Operations\" , label: \"Operations\"},\r\n    {value:\"Legal\" , label: \"Legal\"},\r\n    {value:\"Engineering\" , label: \"Engineering\"},\r\n    {value:\"Admin\" , label: \"Admin\"},\r\n    {value:\"Customer Service\" , label: \"Customer Service\"},\r\n    {value:\"Communications\" , label: \"Communications\"},\r\n    {value:\"Return to Office\" , label: \"Engineering\"},\r\n    {value:\"Work From Home\" , label: \"Work From Home\"},\r\n    {value:\"COVID-19\" , label: \"COVID-19\"},\r\n    {value:\"Layoffs\" , label: \"Layoffs\"},\r\n    {value:\"Investments & Money\" , label: \"Investments & Money\"},\r\n    {value:\"Work Visa\" , label: \"Engineering\"},\r\n    {value:\"Housing\" , label: \"Housing\"},\r\n    {value:\"Startups\" , label: \"Startups\"},\r\n    {value:\"Referrals\" , label: \"Referrals\"},\r\n    {value:\"Health Care & Insurance\" , label: \"Health Care & Insurance\"},\r\n    {value:\"Blockchain & Crypto\" , label: \"Layoffs\"},\r\n    {value:\"Travel\" , label: \"Travel\"},\r\n    {value:\"Tax\" , label: \"Tax\"},\r\n    {value:\"Hobbies & Entertainment\" , label: \"Hobbies & Entertainment\"},\r\n    {value:\"IPO\" , label: \"IPO\"},\r\n    {value:\"Working Parents\" , label: \"Working Parents\"},\r\n    {value:\"Side Jobs\" , label: \"Side Jobs\"},\r\n    {value:\"Food & Dining\" , label: \"Food & Dining\"}]\r\n\r\n    //will reroute user to previous page if he/she is not signed in\r\n    useEffect(() => {\r\n      if(!loggedIn) {\r\n        history.push('/login')\r\n      }\r\n    }, [])\r\n    \r\n    const addPost = async(e) => {\r\n      e.preventDefault()\r\n      try {\r\n        const { data } = await axios.post(`/api/posts/create`, \r\n          {\r\n            title, body, flair\r\n          }, \r\n          {withCredentials: true}\r\n        )\r\n        console.log(data)\r\n        history.push(`/post/${data.postID}`)\r\n      } catch(err) {\r\n\r\n      }\r\n    }\r\n\r\n  return (\r\n    <section className=\"dark:bg-dark-primary  transition-all flex justify-center items-center font-noto duration-500 w-full min-h-screen h-full bg-white-bg\">\r\n      <div className=\"w-11/12 m-auto dark:bg-dark-post bg-white duration-500 transition-all py-8 px-4 rounded-md\">\r\n        <form onSubmit={addPost} className=\"flex w-full pt-4 flex-col pb-5 dark:border-dark-flair \">\r\n          <div className=\"flex flex-col text-left\">\r\n              <label  className=\"text-sm dark:text-gray-300 text-gray-700 font-bold pl-4 pb-1\">Title*</label>\r\n              <input value={title} onChange={e => setTitle(e.target.value)} className=\"dark:text-white text-md flex-g px-3 py-2 text-gray-900 h-10 bg-transparent dark:border-gray-700 hover:ring-green-flair border-gray-400 border rounded-lg outline-none focus:ring-2 focus:ring-green-flair\" />\r\n          </div>\r\n          <div className=\"flex flex-col text-left my-2\">\r\n            <label className=\"text-sm dark:text-gray-300 text-gray-700 font-bold pl-4 pb-1\">Flair*</label>\r\n            <Select value={flair} onChange={e => setFlair(e.target.value)} color=\"white\" bg=\"greenFlair.100\" borderColor=\"greenFlair.100\">\r\n              {flairOptions.map(flair => <option className=\"text-black\" value={flair.value}>{flair.label}</option>)}\r\n            </Select>\r\n          </div>\r\n          <div className=\"flex w-full flex-col mt-3 mb-2 text-left\">\r\n            <label className=\"text-sm dark:text-gray-300 text-gray-700 font-bold pl-4 pb-1\">Body*</label>\r\n            <textarea value={body} onChange={e => setBody(e.target.value)} className=\"dark:text-white text-md flex-g px-3 py-2 text-gray-900 h-56 bg-transparent dark:border-gray-700 hover:ring-green-flair resize-y border-gray-400 border rounded-lg outline-none focus:ring-2 focus:ring-green-flair\" />\r\n          </div>\r\n          <button type=\"submit\" className=\" focus:outline-none w-full mt-2 bg-green-flair py-2 rounded-md duration-300 text-white hover:bg-opacity-90\">Submit</button>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default CreatePost","\r\nexport default function togglePreference() {\r\n  let userPreference = localStorage.getItem('theme')\r\n\r\n  const root = window.document.documentElement\r\n\r\n  if(userPreference === 'dark'){\r\n    root.classList.remove('dark')\r\n    localStorage.setItem('theme', 'light')\r\n  } else {\r\n    root.classList.add('dark')\r\n    localStorage.setItem('theme', 'dark')\r\n  }\r\n}","import React, { useState, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport  useDarkMode from '../../CustomHooks/useDarkMode'\r\nimport { AuthContext } from '../../State/AuthContext'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useToast } from '@chakra-ui/toast'\r\n\r\n\r\nconst SettingPage = () => {\r\n  const toast = useToast()\r\n  const { logout, loggedIn } = useContext(AuthContext)\r\n  const history = useHistory()\r\n  //PROFILE STATE\r\n  const [username, setUsername] = useState('')\r\n  const [bio, setBio] = useState('')\r\n  const [location, setLocation] = useState()\r\n  const [company, setCompany] = useState()\r\n  const [jobTitle, setJobTitle] = useState()\r\n\r\n  //CHANGE PASSWORD STATE\r\n  const [oldPassword, setOldPassword] = useState('')\r\n  const [newPassword, setNewPassword] = useState('')\r\n  const [reNewPassword, setReNewPassword] = useState('')\r\n\r\n\r\n  useEffect(() => {\r\n    const getUserDetails = async() => {\r\n      const { data } = await axios.get(`/api/users`, { withCredentials: true })\r\n      console.log(data)\r\n      const { userDetails } = data\r\n      setUsername(userDetails.username)\r\n      setBio(userDetails.bio)\r\n      setCompany(userDetails.company)\r\n      setLocation(userDetails.location)\r\n      setJobTitle(userDetails.job_title)\r\n    }\r\n    \r\n    loggedIn ? getUserDetails() : history.push('/login')\r\n  }, [])\r\n\r\n  const updateUserDetails = async(e) => {\r\n    e.preventDefault()\r\n    try{\r\n\r\n      const { data } = await axios.put(`/api/users`,\r\n                                      {\r\n                                        username, jobTitle, location, bio, company\r\n                                      },\r\n                                      {withCredentials: true})\r\n  \r\n      if(data.didUpdate){\r\n        toast(\r\n          {\r\n            title: \"Action successful\",\r\n            description: \"Updated your profile details\",\r\n            status: \"success\",\r\n            duration: 3000,\r\n            isClosable: true,\r\n            position: \"bottom-right\"\r\n          }\r\n        )\r\n      }\r\n    } catch(err) {\r\n      toast(\r\n        {\r\n          title: \"Action failed\",\r\n          description: \"Could not update your profile details\",\r\n          status: \"success\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n          position: \"bottom-right\"\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  const changePassword = async(e) => {\r\n    e.preventDefault()\r\n    try{\r\n\r\n      const { data } = await axios.post(`/api/users/reset-password`, \r\n      {\r\n        oldPassword, newPassword, reNewPassword\r\n      }, \r\n      {withCredentials: true})\r\n      \r\n      if(data.didUpdate){\r\n        setOldPassword('')\r\n        setNewPassword('')\r\n        setReNewPassword('')\r\n        toast(\r\n          {\r\n            title: \"Action successful\",\r\n            description: \"Updated your password\",\r\n            status: \"success\",\r\n            duration: 3000,\r\n            isClosable: true,\r\n            position: \"bottom-right\"\r\n          }\r\n        )\r\n      } \r\n    } catch(err) {\r\n      toast(\r\n        {\r\n          title: \"Action failed\",\r\n          description: err.response.data.message,\r\n          status: \"error\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n          position: \"bottom-right\"\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  const clickedLogout = async() => {\r\n    const didUserLogOut = await logout()\r\n    if(didUserLogOut){\r\n      toast(\r\n        {\r\n          title: \"Logout successful\",\r\n          description: \"Bye! Hope to see you soon\",\r\n          status: \"success\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n          position: \"bottom-right\"\r\n        }\r\n      )\r\n      history.push('/')\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  return (\r\n    <section className=\"dark:bg-dark-primary font-noto w-full min-h-screen pt-7 pb-16 transition-all duration-500 bg-white-bg\">\r\n      <div className=\"dark:bg-dark-post w-11/12 m-auto h-full rounded-xl py-6  transition-all duration-500 bg-white\">\r\n        <section className=\"m-auto w-11/12\">\r\n          <h1 className=\"text-left text-2xl text-black dark:text-white font-black \">Profile</h1>\r\n          <form action=\"\" className='mt-4' onSubmit={updateUserDetails}>\r\n            <div className=\"flex flex-col\">\r\n              <label htmlFor=\"\" className=\"text-left text-black dark:text-white text-sm font-medium \">Username</label>\r\n              <input type=\"text\" value={username} onChange={e => setUsername(e.target.value)} className=\"h-10 md:w-1/2 w-full rounded-md outline-none px-2 bg-transparent border border-dark-flair dark:text-white font-medium\" />\r\n            </div>\r\n            <div className=\"flex flex-col mt-6\">\r\n              <label htmlFor=\"\" className=\"text-left text-black dark:text-white text-sm font-medium \">Bio</label>\r\n              <textarea type=\"text\" value={bio} onChange={e => setBio(e.target.value)} className=\" pt-2 md:w-1/2 w-full rounded-md outline-none px-2 bg-transparent border border-dark-flair dark:text-white font-medium h-36\" />\r\n            </div>\r\n            \r\n            <div className=\"flex flex-col mt-6\">\r\n              <label htmlFor=\"\" className=\"text-left text-black dark:text-white text-sm font-medium \">Company</label>\r\n              <input type=\"text\" value={company} onChange={e => setCompany(e.target.value)} className=\"h-10 md:w-1/2 w-full rounded-md outline-none px-2 bg-transparent border border-dark-flair dark:text-white font-medium\" />\r\n            </div>\r\n            <div className=\"flex flex-col mt-6\">\r\n              <label htmlFor=\"\" className=\"text-left text-black dark:text-white text-sm font-medium \">Job Title</label>\r\n              <input type=\"text\" value={jobTitle} onChange={e => setJobTitle(e.target.value)} className=\"h-10 md:w-1/2 w-full rounded-md outline-none px-2 bg-transparent border border-dark-flair dark:text-white font-medium\" />\r\n            </div>\r\n            <div className=\"flex flex-col mt-6\">\r\n              <label htmlFor=\"\" className=\"text-left text-black dark:text-white text-sm font-medium \">Location</label>\r\n              <input type=\"text\" value={location} onChange={e => setLocation(e.target.value)} className=\"h-10 md:w-1/2 w-full rounded-md outline-none px-2 bg-transparent border border-dark-flair dark:text-white font-medium\" />\r\n            </div>\r\n            <div className=\"flex justify-start mt-2\">\r\n              <button className=\" focus:outline-none md:w-auto px-4 w-full mt-2 bg-green-flair py-2 rounded-md duration-300 text-white hover:bg-opacity-90\">Save changes</button>\r\n            </div>\r\n          </form>\r\n\r\n          <h1 className=\"text-left text-2xl text-black mt-16 dark:text-white font-black \">Change Theme</h1>\r\n          <div className=\"flex justify-start\">\r\n            <button onClick={useDarkMode} className=\"focus:outline-none w-auto px-3 mt-2 bg-light-flair dark:bg-dark-flair py-2 rounded-md duration-300 text-white hover:bg-opacity-90\">Switch</button>\r\n          </div>\r\n\r\n          <h1 className=\"text-left text-2xl text-black mt-16 dark:text-white font-black \">Change Password</h1>\r\n          <form onSubmit={changePassword} className='mt-4'>\r\n            <div className=\"flex flex-col\">\r\n              <label htmlFor=\"\" className=\"text-left text-black dark:text-white text-sm font-medium \">Password*</label>\r\n              <input type=\"password\" value={oldPassword} onChange={e => setOldPassword(e.target.value)} className=\"h-10 md:w-1/2 w-full rounded-md outline-none px-2 bg-transparent border border-dark-flair dark:text-white font-medium\" />\r\n            </div>\r\n            <div className=\"flex flex-col mt-6\">\r\n              <label htmlFor=\"\" className=\"text-left text-black dark:text-white text-sm font-medium \">New password*</label>\r\n              <input type=\"password\" value={newPassword} onChange={e => setNewPassword(e.target.value)} className=\"h-10 md:w-1/2 w-full rounded-md outline-none px-2 bg-transparent border border-dark-flair dark:text-white font-medium\" />\r\n            </div>\r\n            <div className=\"flex flex-col mt-6\">\r\n              <label htmlFor=\"\" className=\"text-left text-black dark:text-white text-sm font-medium \">Re-enter new password*</label>\r\n              <input type=\"password\" value={reNewPassword} onChange={e => setReNewPassword(e.target.value)} className=\"h-10 md:w-1/2 w-full rounded-md outline-none px-2 bg-transparent border border-dark-flair dark:text-white font-medium\" />\r\n            </div>\r\n            <div className=\"flex justify-start mt-2\">\r\n              <button className=\" focus:outline-none md:w-auto w-full px-4 mt-2 bg-light-flair dark:bg-dark-flair py-2 rounded-md duration-300 text-white hover:bg-opacity-90\">Change password</button>\r\n            </div>\r\n          </form>\r\n\r\n          <h1 className=\"text-left text-2xl text-black mt-16 dark:text-white font-black \">Logout</h1>\r\n          <div className=\"flex justify-start\">\r\n            <button onClick={clickedLogout} className=\" focus:outline-none w-auto px-4 mt-2 bg-red-500 dark:bg-red-500 py-2 rounded-md duration-300 text-white hover:bg-opacity-90\">Logout</button>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default SettingPage\r\n","import React, { createContext, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport const UserProfileContext = createContext()\r\n\r\nconst isProd = false\r\n\r\nexport const UserProfileProvider = ({children}) => {\r\n\r\n  const [userInContext, setUser] = useState()\r\n  const [userPosts, setUserPosts] = useState([])\r\n  const [userComments, setUserComments] = useState([])\r\n  const [userSavedPosts, setUserSavedPosts] = useState([])\r\n  const [userLikedPosts, setUserLikedPosts] = useState([])\r\n\r\n  const [url, setUrl] = useState(isProd ? \"\" : \"http://localhost:5000\")\r\n\r\n\r\n  const getUserPostsFunction = async(user) => {\r\n    if(userPosts.length === 0) {\r\n      const { data } = await axios.get(`/api/users/posts/${user}`, { withCredentials: true })\r\n      setUserPosts(data.userPosts)\r\n      setUserComments([])\r\n      setUser(user)\r\n    } else if(user !== userInContext) {\r\n      const { data } = await axios.get(`/api/users/posts/${user}`, { withCredentials: true })\r\n      setUserPosts(data.userPosts)\r\n      setUserComments([])\r\n      setUser(user)\r\n    }\r\n  }\r\n\r\n  const getUserCommentsFunction = async(user) => {\r\n    console.log(user)\r\n    if(userComments.length === 0) {\r\n      const { data } = await axios.get(`/api/users/comments/${user}`, { withCredentials: true })\r\n      setUserComments(data.comments)\r\n      setUser(userInContext)\r\n    } else if (user !== userInContext){\r\n      const { data } = await axios.get(`/api/users/comments/${user}`, { withCredentials: true })\r\n      setUserComments(data.comments)\r\n      setUser(userInContext)\r\n    }\r\n  }\r\n\r\n  const getUserLikesFunction = async(user) => {\r\n    if(userLikedPosts.length === 0) {\r\n      const { data } = await axios.get(`/api/users/liked/${user}`, { withCredentials: true })\r\n      setUserLikedPosts(data.posts)\r\n      setUser(userInContext)\r\n    } else if (user !== userInContext){\r\n      const { data } = await axios.get(`/api/users/liked/${user}`, { withCredentials: true })\r\n      setUserLikedPosts(data.posts)\r\n      setUser(userInContext)\r\n    }\r\n  }\r\n\r\n  const getUserSavedFunction = async(user) => {\r\n    if(userPosts.length === 0) {\r\n      const { data } = await axios.get(`/api/users/comments/${user}`, { withCredentials: true })\r\n      setUserSavedPosts(data.posts)\r\n      setUser(userInContext)\r\n    } else if (user !== userInContext){\r\n      const { data } = await axios.get(`/api/users/comments/${user}`, { withCredentials: true })\r\n      setUserComments(data.posts)\r\n      setUser(userInContext)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <UserProfileContext.Provider value={\r\n      { \r\n        getUserCommentsFunction,\r\n        getUserLikesFunction,\r\n        getUserPostsFunction,\r\n        getUserSavedFunction,\r\n        userSavedPosts,\r\n        userComments,\r\n        userPosts,\r\n        userLikedPosts\r\n        \r\n      }\r\n    }>\r\n      {children}\r\n    </UserProfileContext.Provider>\r\n  )\r\n}\r\n","import React, {useState, useEffect, useContext} from 'react'\r\nimport { BiTimeFive, BiUser } from 'react-icons/bi'\r\nimport { BsChat, BsHeart, BsHeartFill } from 'react-icons/bs'\r\nimport Moment from 'react-moment'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport PostComponent from '../../Components/Post.Component/Post.Component'\r\nimport {AuthContext} from '../../State/AuthContext'\r\nimport { UserProfileContext } from '../../State/UserProfileContext'\r\n\r\nconst UserProfile = () => {\r\n  const {username} = useParams()\r\n  const { loggedInUsername, userID } = useContext(AuthContext)\r\n  const { getUserPostsFunction, userPosts } = useContext(UserProfileContext)\r\n  \r\n  useEffect(() => {\r\n    getUserPostsFunction(username)\r\n  }, [])\r\n\r\n  return (\r\n    <section className=\"w-full min-h-screen bg-white-bg py-8 dark:bg-dark-primary font-noto\">\r\n      <div className=\"h-auto w-11/12 m-auto \">\r\n        <nav className=\"w-full m-auto py-4 bg-white rounded-md dark:bg-dark-post\">\r\n          <ul className=\"flex w-11/12 m-auto\">\r\n            <li className=\"mr-7\">\r\n              <Link to={`/user/${username}`} className=\"text-sm text-black font-semibold dark:text-white  border-b-2 pb-0.5  border-white\">POSTS</Link>\r\n            </li>\r\n            <li className=\"mr-7\">\r\n              <Link to={`/user/${username}/comments`} className=\"text-sm text-black font-semibold dark:text-white\">COMMENTS</Link>\r\n            </li>\r\n            {\r\n              loggedInUsername === username ? (\r\n                <>\r\n                  <li className=\"mr-7\">\r\n                    <Link to={`/user/${username}/liked`} className=\"text-sm font-semibold text-black dark:text-white\">LIKED</Link>\r\n                  </li>\r\n                </>\r\n              ) \r\n              : \r\n              ('')\r\n            }\r\n          </ul>\r\n        </nav>\r\n        <div className=\"\">\r\n          <div className=\"py-1.5\">\r\n            {\r\n              userPosts.map(post => (\r\n                <PostPreview props={post} />\r\n              ))\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst PostPreview = ({props}) => {\r\n  const { loggedInUserID } = useContext(AuthContext)\r\n  \r\n\r\n  return (\r\n    <div className=\"w-full h-auto mt-4 bg-white rounded-md shadow-md dark:bg-dark-post\">\r\n      <div className=\"m-auto py-5 w-11/12\">\r\n          <Link to={`/flair/${props.post_flair}`} className=\"flex  justify-start font-medium text-xs rounded-md text-white w-max  py-1.5 px-2\" style={{\"background-color\": \"#00AE81\"}} >\r\n            {props.post_flair}\r\n          </Link>\r\n        <div className=\"flex mt-1 mb-3\">\r\n          <Link to={`/post/${props.post_id}`}>\r\n            <h1 className=\"text-black mr-3 dark:text-white font-bold text-lg\">{props.post_title}</h1>\r\n          </Link>\r\n        </div>\r\n        <div className=\"flex\">\r\n          <div className=\"dark:bg-dark-flair transition-all duration-500 bg-light-flair flex items-center py-1.5 px-2 w-max rounded-md\">\r\n            <BiUser color={\"#fff\"} />\r\n            <Link to={`/user/${props.username}`} className=\"flex text-xs ml-1 items-center text-white \" >\r\n              {props.username}\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"dark:bg-dark-flair transition-all duration-500 bg-light-flair flex items-center py-1.5 px-2  w-max mx-2 rounded-md\" >\r\n            <BiTimeFive color={\"#fff\"} />\r\n            <p className=\"flex text-xs ml-1 items-center text-white \"  >\r\n              <Moment fromNow >{props.created_at}</Moment>\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"dark:bg-dark-flair transition-all duration-500 bg-light-flair flex items-center w-max py-1.5 px-2  rounded-md\">\r\n            <BsChat color={\"#fff\"}  />\r\n            <p className=\"flex text-xs ml-1 items-center text-white \" >\r\n              {props.comment_count}\r\n            </p>\r\n\r\n          </div>\r\n          <div className=\"dark:bg-dark-flair transition-all duration-500 ml-2 bg-light-flair flex items-center w-max py-1.5 px-2  rounded-md\">\r\n            {\r\n              props.liked_by.includes(loggedInUserID) ? (\r\n                <>\r\n                  <BsHeartFill color={\"#fff\"}  />\r\n                  <p className=\"flex text-xs ml-1 items-center text-white \" >\r\n                    {props.liked_by.length}\r\n                  </p>\r\n                </>\r\n              ) : (\r\n                <>\r\n                <BsHeart color={\"#fff\"}  />\r\n                  <p className=\"flex text-xs ml-1 items-center text-white \" >\r\n                    {props.liked_by.length}\r\n                  </p>\r\n                </>\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>  \r\n  )\r\n}\r\n\r\nexport default UserProfile","import React, {useState, useEffect, useContext} from 'react'\r\nimport Moment from 'react-moment'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport {AuthContext} from '../../State/AuthContext'\r\nimport { UserProfileContext } from '../../State/UserProfileContext'\r\n\r\nconst UserProfileComments = () => {\r\n  const {username} = useParams()\r\n  const { loggedInUsername } = useContext(AuthContext)\r\n  const { getUserCommentsFunction, userComments } = useContext(UserProfileContext)\r\n  \r\n  useEffect(() => {\r\n    getUserCommentsFunction(username)\r\n  }, [])\r\n\r\n  return (\r\n    <section className=\"w-full min-h-screen bg-white-bg py-8 dark:bg-dark-primary font-noto\">\r\n      <div className=\"h-auto w-11/12 m-auto \">\r\n        <nav className=\"w-full m-auto py-4 bg-white rounded-md dark:bg-dark-post\">\r\n          <ul className=\"flex w-11/12 m-auto\">\r\n            <li className=\"mr-7\">\r\n              <Link to={`/user/${username}`} className=\"text-sm text-black font-semibold dark:text-white\">POSTS</Link>\r\n            </li>\r\n            <li className=\"mr-7\">\r\n              <Link to={`/user/${username}/comments`} className=\"text-sm text-black font-semibold dark:text-white border-b-2 pb-0.5 border-black  dark:border-white\">COMMENTS</Link>\r\n            </li>\r\n            {\r\n              loggedInUsername === username ? (\r\n                <>\r\n                  <li className=\"mr-7\">\r\n                    <Link to={`/user/${username}/liked`} className=\"text-sm font-semibold text-black dark:text-white\">LIKED</Link>\r\n                  </li>\r\n                </>\r\n              ) \r\n              : \r\n              ('')\r\n            }\r\n          </ul>\r\n        </nav>\r\n        <div className=\"\">\r\n          <div className=\"py-1.5\">\r\n            {\r\n              userComments.map(post => (\r\n                <CommentsPreview props={post} />\r\n              ))\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst CommentsPreview = ({props}) => {\r\n  return (\r\n    <article to={`/post/${props.parent_postid}`} className=\"w-full h-auto mt-4 bg-white rounded-md shadow-md dark:bg-dark-post\">\r\n      <Link to={`/post/${props.parent_postid}`}>\r\n        <div className=\"m-auto py-3 w-11/12\">\r\n          <div className=\"flex mt-1\">\r\n              <h1 className=\"dark:text-gray-300 text-left text-gray-900 font-bold text-xs\">{props.username} <span className=\"text-gray-700 dark:text-gray-400\">commented on</span> </h1>\r\n              <h1 className=\"text-gray-900 mr-3 dark:text-gray-300 font-bold text-xs whitespace-pre\">  {props.post_title}</h1>\r\n          </div>\r\n          <h1 className=\"text-gray-900 mr-3 dark:text-white font-bold text-md\">{props.comment_body}</h1>\r\n        </div>\r\n      </Link>\r\n    </article>  \r\n  )\r\n}\r\n\r\nexport default UserProfileComments","import React, {useState, useEffect, useContext} from 'react'\r\nimport { BiTimeFive, BiUser } from 'react-icons/bi'\r\nimport { BsChat, BsHeart } from 'react-icons/bs'\r\nimport Moment from 'react-moment'\r\nimport { Link, useHistory, useParams } from 'react-router-dom'\r\nimport PostComponent from '../../Components/Post.Component/Post.Component'\r\nimport {AuthContext} from '../../State/AuthContext'\r\nimport { UserProfileContext } from '../../State/UserProfileContext'\r\n\r\nconst UserProfile = () => {\r\n  const history = useHistory()\r\n  const {username} = useParams()\r\n  const { loggedInUsername } = useContext(AuthContext)\r\n  const { getUserLikesFunction, userLikedPosts } = useContext(UserProfileContext)\r\n  \r\n  useEffect(() => {\r\n    if(loggedInUsername === username){\r\n      getUserLikesFunction(username)\r\n    } else {\r\n      history.goBack()\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <section className=\"w-full min-h-screen bg-white-bg py-8 dark:bg-dark-primary font-noto\">\r\n      <div className=\"h-auto w-11/12 m-auto \">\r\n        <nav className=\"w-full m-auto py-4 bg-white rounded-md dark:bg-dark-post\">\r\n          <ul className=\"flex w-11/12 m-auto\">\r\n            <li className=\"mr-7\">\r\n              <Link to={`/user/${username}`} className=\"text-sm text-black font-semibold dark:text-white\">POSTS</Link>\r\n            </li>\r\n            <li className=\"mr-7\">\r\n              <Link to={`/user/${username}/comments`} className=\"text-sm text-black font-semibold dark:text-white\">COMMENTS</Link>\r\n            </li>\r\n            {\r\n              loggedInUsername === username ? (\r\n                <>\r\n                  <li className=\"mr-7\">\r\n                    <Link to=\"/user\" className=\"text-sm font-semibold text-black dark:text-white  border-b-2 pb-0.5  border-white\">LIKED</Link>\r\n                  </li>\r\n                </>\r\n              ) \r\n              : \r\n              ('')\r\n            }\r\n          </ul>\r\n        </nav>\r\n        <div className=\"\">\r\n          <div className=\"py-1.5\">\r\n            {\r\n              userLikedPosts.map(post => (\r\n                <PostPreview props={post} />\r\n              ))\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst PostPreview = ({props}) => {\r\n  return (\r\n    <div className=\"w-full h-auto mt-4 bg-white rounded-md shadow-md dark:bg-dark-post\">\r\n      <div className=\"m-auto py-5 w-11/12\">\r\n          <Link to={`/flair/${props.post_flair}`} className=\"flex  justify-start font-medium text-xs rounded-md text-white w-max  py-1.5 px-2\" style={{\"background-color\": \"#00AE81\"}} >\r\n            {props.post_flair}\r\n          </Link>\r\n        <div className=\"flex mt-1 mb-3\">\r\n          <Link to={`/post/${props.post_id}`}>\r\n            <h1 className=\"text-black mr-3 dark:text-white font-bold text-lg\">{props.post_title}</h1>\r\n          </Link>\r\n        </div>\r\n        <div className=\"flex\">\r\n          <div className=\"dark:bg-dark-flair transition-all duration-500 bg-light-flair flex items-center py-1.5 px-2 w-max rounded-md\">\r\n            <BiUser color={\"#fff\"} />\r\n            <Link to={`/user/${props.username}`} className=\"flex text-xs ml-1 items-center text-white \" >\r\n              {props.username}\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"dark:bg-dark-flair transition-all duration-500 bg-light-flair flex items-center py-1.5 px-2  w-max mx-2 rounded-md\" >\r\n            <BiTimeFive color={\"#fff\"} />\r\n            <p className=\"flex text-xs ml-1 items-center text-white \"  >\r\n              <Moment fromNow >{props.created_at}</Moment>\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"dark:bg-dark-flair transition-all duration-500 bg-light-flair flex items-center w-max py-1.5 px-2  rounded-md\">\r\n            <BsChat color={\"#fff\"} />\r\n            <p className=\"flex text-xs ml-1 items-center text-white \" >\r\n              {props.comment_count}\r\n            </p>\r\n          </div>\r\n          <div className=\"dark:bg-dark-flair transition-all duration-500 bg-light-flair ml-2 flex items-center w-max py-1.5 px-2  rounded-md\">\r\n            <BsHeart color={\"#fff\"} />\r\n            <p className=\"flex text-xs ml-1 items-center text-white \" >\r\n              {props.liked_by.length}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>  \r\n  )\r\n}\r\n\r\nexport default UserProfile","import React, { useContext, useEffect, useState } from 'react'\r\nimport { useLocation } from 'react-router'\r\nimport queryString from 'query-string'\r\nimport axios from 'axios'\r\nimport Masonry, { ResponsiveMasonry } from 'react-responsive-masonry'\r\nimport PostComponent from '../../Components/Post.Component/Post.Component'\r\nimport { useToast } from '@chakra-ui/toast'\r\nconst Search = () => {\r\n  \r\n  const toast = useToast()\r\n  const { search } = useLocation()\r\n  const queries = queryString.parse(search)\r\n\r\n  const [posts, setPosts] = useState([])\r\n\r\n  useEffect(() => {\r\n    const getQueryPosts = async() => {\r\n      console.log(queries.q)\r\n      const { data } = await axios.get(`/api/posts/search?q=${queries.q}`)\r\n      setPosts(data.posts)\r\n      if(data.posts.length === 0){\r\n        toast(\r\n          {\r\n            title:\"Could not find any posts\",\r\n            description: \"We searched high and low but couldn't find anything related to your needs\",\r\n            status:\"error\",\r\n            duration: 10000,\r\n            isClosable: true,\r\n            position: \"bottom-right\"\r\n          }\r\n        )\r\n      }\r\n      \r\n    }\r\n    getQueryPosts()\r\n  }, [search])\r\n\r\n  return (\r\n    <section className=\"w-full  bg-white-bg dark:bg-dark-primary\" style={{\"min-height\": \"calc(100vh - 4rem)\"}}>\r\n      <div className=\"m-auto w-11/12 text-white\">\r\n        <div className=\"flex items-baseline\">\r\n          <h1 className=\"py-6 text-xl text-black dark:text-white capitalize font-noto font-black mr-1\">Query: </h1>\r\n          <p className=\"py-6 text-xl text-gray-700 dark:text-white capitalize font-noto font-bold mr-1\">{queries.q}</p>\r\n        </div>\r\n          <ResponsiveMasonry columnsCountBreakPoints={{350: 1, 1020: 2}}>\r\n            <Masonry gutter=\"15px\">\r\n                {posts.map((post  ) => (\r\n                    <PostComponent props={post} key={post.post_id} />\r\n                ))}\r\n            </Masonry>\r\n          </ResponsiveMasonry>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import React, { useRef } from 'react'\r\nimport { BiMapPin, BiTimeFive } from 'react-icons/bi';\r\nimport Moment from 'react-moment';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast, useToast } from '@chakra-ui/toast';\r\nimport { AiFillCheckSquare } from 'react-icons/ai';\r\nimport { Tooltip } from '@chakra-ui/tooltip';\r\n\r\nconst JobPostCard = ({isApproved, jobTitle, jobLocation, jobCompany, jobCreatedAt, jobApplyAt}) => {\r\n  \r\n  \r\n\r\n  return (\r\n    <article className=\"w-full py-5 rounded-md  bg-white dark:bg-dark-post font-noto\">\r\n      <div className=\"w-11/12 m-auto\">\r\n        <Link to={`/companies/${jobCompany}`} className=\"flex  justify-start font-medium text-xs rounded-md text-white w-max  py-1.5 px-2\" style={{\"background-color\": \"#00AE81\"}} >\r\n          {jobCompany}\r\n        </Link>\r\n        <div className=\"flex items-center\">\r\n\r\n          <h1 className=\"dark:text-white text-lg font-bold mt-1\">{jobTitle}</h1>\r\n          {\r\n            isApproved ? (\r\n              <Tooltip hasArrow label=\"Approved posting\" aria-label=\"A tooltip\">\r\n                <span className='w-min '>\r\n                  <AiFillCheckSquare size={20} className=\"ml-1  text-green-flair\" />\r\n                </span>\r\n              </Tooltip>\r\n            ) : \"\"\r\n          }\r\n          \r\n        </div>\r\n        <a href={jobApplyAt} target=\"_blank\" rel=\"noreferrer\" className=\"dark:text-green-flair text-sm\">Click here to apply</a>\r\n        <div className=\"flex mt-2 \">\r\n          <div className=\"dark:bg-dark-flair transition-all duration-500  bg-light-flair flex items-center py-1.5 px-2 w-max rounded-md\">\r\n            <BiMapPin color={\"#fff\"} />\r\n            <h2 className=\"flex text-xs ml-2 items-center text-white \" >\r\n              {jobLocation}\r\n            </h2>\r\n          </div>\r\n          <div className=\"dark:bg-dark-flair transition-all duration-500 bg-light-flair flex items-center py-1.5 px-2  w-max mx-2 rounded-md\" >\r\n            <BiTimeFive color={\"#fff\"} />\r\n            <p className=\"flex text-xs ml-1 items-center text-white \"  >\r\n              <Moment fromNow >{jobCreatedAt}</Moment>\r\n            </p>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default JobPostCard\r\n","import { Input, InputGroup, InputLeftAddon } from '@chakra-ui/input'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport JobPostCard from '../../Components/JobPostCard/JobPostCard'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Hiring = () => {\r\n  const [title,setTitle] = useState('')\r\n  const [location, setLocation] = useState('')\r\n\r\n  const [jobs, setJobs] = useState([])\r\n\r\n\r\n  const handleJobSearch = async(e) => {\r\n    e.preventDefault()\r\n    const { data } = await axios.get(`/api/jobs?title=${title}&loc=${location}`)\r\n    setJobs(data.jobs)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getJobs = async() => {\r\n      const { data } = await axios.get(`/api/jobs`)\r\n      console.log(data)\r\n      setJobs(data.jobs)\r\n    }\r\n    getJobs()\r\n  }, [])\r\n\r\n  return (\r\n    <section className=\"w-full min-h-screen bg-white-bg dark:bg-dark-primary\">\r\n      <div className=\"m-auto w-11/12 pt-4\">\r\n        <div className=\" w-full\">\r\n          \r\n          <form onSubmit={handleJobSearch} className=\"grid grid-row-3 gap-3  w-full  lg:grid-cols-5\">\r\n            <InputGroup className=\"h-12   md:mr-3 lg:col-span-2 \">\r\n              <InputLeftAddon children=\"What \" bgColor=\"#00AE81\" color=\"white\" height=\"100%\" paddingRight=\"25px\" borderColor='transparent' />\r\n              <input type=\"text\" value={title} onChange={e => setTitle(e.target.value)} height=\"auto\" placeholder=\"Eg: Frontend Developer\" className=\"dark:text-white border-r pl-3 rounded-tr-md border-t border-b border-gray-300 dark:border-gray-700 outline-none w-full bg-transparent rounded-br-md focus:ring-1  focus:ring-inset focus:ring-green-flair\" />\r\n            </InputGroup>\r\n            <InputGroup className=\"h-12 md:mr-3 lg:col-span-2 \">\r\n              <InputLeftAddon children=\"Where\" bgColor=\"#00AE81\" color=\"white\" height=\"100%\" borderColor='transparent' />\r\n              <input type=\"text\" value={location} onChange={e => setLocation(e.target.value)} height=\"auto\" placeholder=\"Eg: New Delhi\" className=\"dark:text-white border-r pl-3 rounded-tr-md border-t border-b border-gray-300 dark:border-gray-700 outline-none w-full bg-transparent rounded-br-md focus:ring-1  focus:ring-inset focus:ring-green-flair\" />\r\n            </InputGroup>\r\n\r\n            <button type=\"submit\" onSubmit={handleJobSearch} className=\"focus:outline-none px-12 h-12 bg-green-flair  rounded-md duration-300 text-white hover:bg-opacity-90\">Search</button>\r\n          </form>\r\n          <div className=\"w-full text-right mt-1\">\r\n            <Link to=\"/add/job\" className=\"text-sm text-green-flair\">Recruiter? Add a job here</Link>\r\n          </div>\r\n          <div className=\"grid mt-6 grid-col-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            {\r\n              jobs.map(job => <JobPostCard jobID={job.job_id} jobDesc={job.job_desc} jobApplyAt={job.job_apply_at} jobCompany={job.job_company} jobCreatedAt={job.job_created_at} jobTitle={job.job_title} jobLocation={job.job_location} />)\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Hiring\r\n","import React, {useState, useEffect, useContext} from 'react'\r\nimport axios from 'axios'\r\nimport { Select } from \"@chakra-ui/react\"\r\nimport { useHistory } from 'react-router'\r\nimport { AuthContext } from '../../State/AuthContext'\r\n\r\nconst CreateJob = () => {\r\n  const {loggedIn} = useContext(AuthContext)\r\n\r\n  const history = useHistory()\r\n\r\n  const [title, setTitle] = useState('')\r\n  const [keywords, setKeywords] = useState('')\r\n  const [location, setLocation] = useState('')\r\n  const [applyURL, setApplyURL] = useState('')\r\n  const [company, setCompany] = useState('')\r\n\r\n\r\n    //will reroute user to previous page if he/she is not signed in\r\n    useEffect(() => {\r\n      if(!loggedIn) {\r\n        history.push('/login')\r\n      }\r\n    }, [])\r\n    \r\n    const addPost = async(e) => {\r\n      e.preventDefault()\r\n      try {\r\n        const { data } = await axios.post('/api/jobs/add', \r\n          {\r\n            title, location, applyURL, keywords, company\r\n          }, \r\n          {withCredentials: true}\r\n        )\r\n        history.push(`/post/${data.postID}`)\r\n      } catch(err) {\r\n\r\n      }\r\n    }\r\n\r\n  return (\r\n    <section className=\"dark:bg-dark-primary  transition-all flex justify-center items-center font-noto duration-500 w-full min-h-screen h-full bg-white-bg\">\r\n      <div className=\"w-11/12 m-auto my-3 dark:bg-dark-post bg-white duration-500 transition-all py-8 px-4 rounded-md\">\r\n        <form onSubmit={addPost} className=\" flex w-full py-2 md:pt-4 flex-col pb-5 dark:border-dark-flair \">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5\">\r\n            <div className=\"flex flex-col text-left\">\r\n                <label  className=\"text-sm dark:text-gray-300 text-gray-700 font-bold pl-4 pb-1\">Job Title*</label>\r\n                <input value={title} onChange={e => setTitle(e.target.value)} className=\"dark:text-white text-md flex-g px-3 py-2 text-gray-900 h-10 bg-transparent dark:border-gray-700 hover:ring-green-flair border-gray-400 border rounded-lg outline-none focus:ring-2 focus:ring-green-flair\" />\r\n            </div>\r\n            <div className=\"flex flex-col text-left \">\r\n              <label className=\"text-sm dark:text-gray-300 text-gray-700 font-bold pl-4 pb-1\">Your company*</label>\r\n              <input value={company} onChange={e => setCompany(e.target.value)} className=\"dark:text-white text-md flex-g px-3 py-2 text-gray-900 h-10 bg-transparent dark:border-gray-700 hover:ring-green-flair border-gray-400 border rounded-lg outline-none focus:ring-2 focus:ring-green-flair\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 my-3 md:my-2\">\r\n            <div className=\"flex flex-col text-left\">\r\n                <label  className=\"text-sm dark:text-gray-300 text-gray-700 font-bold pl-4 pb-1\">Job Location*</label>\r\n                <input value={location} onChange={e => setLocation(e.target.value)} className=\"dark:text-white text-md flex-g px-3 py-2 text-gray-900 h-10 bg-transparent dark:border-gray-700 hover:ring-green-flair border-gray-400 border rounded-lg outline-none focus:ring-2 focus:ring-green-flair\" />\r\n            </div>\r\n            <div className=\"flex flex-col text-left \">\r\n              <label className=\"text-sm dark:text-gray-300 text-gray-700 font-bold pl-4 pb-1\">Apply URL*</label>\r\n              <input value={applyURL} onChange={e => setApplyURL(e.target.value)} className=\"dark:text-white text-md flex-g px-3 py-2 text-gray-900 h-10 bg-transparent dark:border-gray-700 hover:ring-green-flair border-gray-400 border rounded-lg outline-none focus:ring-2 focus:ring-green-flair\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"flex w-full flex-col mt-3 mb-2 text-left\">\r\n            <label className=\"text-sm dark:text-gray-300 text-gray-700 font-bold pl-4 pb-1\">Keywords* ({keywords.length}/100)</label>\r\n            <textarea maxLength=\"100\" value={keywords} onChange={e => setKeywords(e.target.value)} className=\"dark:text-white text-md flex-g px-3 py-2 text-gray-900 h-56 bg-transparent dark:border-gray-700 hover:ring-green-flair resize-y border-gray-400 border rounded-lg outline-none focus:ring-2 focus:ring-green-flair\" />\r\n          </div>\r\n          <button type=\"submit\" className=\" focus:outline-none w-full mt-2 bg-green-flair py-2 rounded-md duration-300 text-white hover:bg-opacity-90\">Submit</button>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default CreateJob","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst MobileNavbar = () => {\r\n  return (\r\n    <nav className=\"w-full bottom-0 sticky bg-white dark:bg-dark-primary flex font-noto h-12  border-t-2 border-gray-300  dark:border-gray-700\">\r\n      <ul className=\"w-11/12  mx-auto grid place-items-center grid-cols-2\">\r\n          <Link to=\"/companies\" className=\" flex w-full  h-full items-center justify-center border-r-2 border-gray-300 dark:border-gray-700\">\r\n            <li className=\"dark:text-white mx-2 text-black list-none \">\r\n              <h1>Reviews</h1>\r\n            </li>\r\n          </Link>\r\n          <Link to=\"/hiring\" className=\" flex w-full  h-full items-center justify-center\">\r\n            <li className=\"dark:text-white mx-2 text-black list-none \">\r\n              <h1>Who's hiring</h1>\r\n            </li>\r\n          </Link>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default MobileNavbar\r\n","import React, { useContext, useState } from 'react'\r\nimport { FcGoogle } from 'react-icons/fc'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { AuthContext } from '../../State/AuthContext'\r\nimport { useToast } from '@chakra-ui/toast'\r\nimport { ImSpinner2 } from 'react-icons/im'\r\nimport { AiFillHome } from 'react-icons/ai'\r\nconst SignUpPage = () => {\r\n  const history = useHistory()\r\n  const toast = useToast()\r\n  const { signup } = useContext(AuthContext)\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [rePassword, setRePassword] = useState('')\r\n  const [fetching, setFetching] = useState(false)\r\n\r\n  const logInUser = async(e) => {\r\n    e.preventDefault()\r\n    if(password !== rePassword){\r\n      toast(\r\n        {\r\n          title: \"Could not create account\",\r\n          description: \"Please make sure both entered passwords are correct\",\r\n          status: \"error\",\r\n          duration: 300000,\r\n          isClosable: true,\r\n          position: \"bottom-right\"\r\n        }\r\n      )\r\n    }else {\r\n      setFetching(true)\r\n      const reRouteUser = await signup(email, password,username)\r\n      if(reRouteUser){\r\n        toast(\r\n          {\r\n            title: \"Login successful\",\r\n            description: \"Hey there, welcome to Jobify\",\r\n            status: \"success\",\r\n            duration: 3000,\r\n            isClosable: true,\r\n            position: \"bottom-right\"\r\n          }\r\n        )\r\n        setFetching(false)\r\n        history.push('/')\r\n      }\r\n      else {\r\n        toast(\r\n          {\r\n            title: \"Login failed\",\r\n            description: \"Entered credentials are wrong\",\r\n            status: \"error\",\r\n            duration: 3000,\r\n            isClosable: true,\r\n            position: \"bottom-right\"\r\n          }\r\n        )\r\n        setFetching(false)\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <section className=\"w-full font-noto\">\r\n      <div className=\"grid md:grid-cols-3 max-h-screen relative\">\r\n      <div className=\" hidden md:block col-span-2\" style={{\r\n          backgroundColor: \"#303067\",\r\n          backgroundImage:  \"linear-gradient(30deg, #444cf7 12%, transparent 12.5%, transparent 87%, #444cf7 87.5%, #444cf7), linear-gradient(150deg, #444cf7 12%, transparent 12.5%, transparent 87%, #444cf7 87.5%, #444cf7), linear-gradient(30deg, #444cf7 12%, transparent 12.5%, transparent 87%, #444cf7 87.5%, #444cf7), linear-gradient(150deg, #444cf7 12%, transparent 12.5%, transparent 87%, #444cf7 87.5%, #444cf7), linear-gradient(60deg, #444cf777 25%, transparent 25.5%, transparent 75%, #444cf777 75%, #444cf777), linear-gradient(60deg, #444cf777 25%, transparent 25.5%, transparent 75%, #444cf777 75%, #444cf777)\",\r\n          backgroundSize: \"48px 84px\",\r\n          backgroundPosition: \"0 0, 0 0, 24px 42px, 24px 42px, 0 0, 24px 42px\",\r\n        }} />\r\n        <div className=\"min-h-screen flex justify-center items-center\" style={{\"backgroundColor\": \"#303067\"}}>\r\n          <div className=\" w-9/12 m-auto \">\r\n            <div className=\"flex  h-full \">\r\n              <Link to=\"/\" className=\"bg-green-flair px-3 mr-2 rounded-sm flex items-center\">\r\n                <AiFillHome className=\"text-white\" />\r\n              </Link>\r\n              <h2 className=\"text-3xl text-left font-black text-white\">Sign Up</h2>\r\n            </div>\r\n            <form onSubmit={logInUser} className=\"mt-7\">\r\n            <div className=\"flex flex-col\">\r\n                <label  className=\"text-xs text-gray-100 font-bold pl-2 pb-1 text-left \">Username</label>\r\n                <input type=\"text\" value={username} onChange={e => setUsername(e.target.value)} className=\" text-sm flex-g px-3 py-2 text-white h-10 bg-transparent border-gray-400 border rounded-md outline-none focus:ring-1 focus:ring-blue-400 font-semibold \" />\r\n              </div>\r\n              <div className=\"flex flex-col mt-3\">\r\n                <label  className=\"text-xs text-gray-100 font-bold pl-2 pb-1 text-left \">Email</label>\r\n                <input type=\"email\" value={email} onChange={e => setEmail(e.target.value)} className=\" text-sm flex-g px-3 py-2 text-white h-10 bg-transparent border-gray-400 border rounded-md outline-none focus:ring-1 focus:ring-blue-400 font-semibold \" />\r\n              </div>\r\n              <div className=\"flex flex-col mt-3\">\r\n                <label  className=\"text-xs text-gray-100 font-bold pl-2 pb-1 text-left \">Password</label>\r\n                <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} className=\" text-sm flex-g px-3 py-2 text-white h-10 bg-transparent border-gray-400 border rounded-md outline-none focus:ring-1 focus:ring-blue-400 font-semibold \" />\r\n              </div>\r\n              <div className=\"flex flex-col mt-3\">\r\n                <label  className=\"text-xs text-gray-100 font-bold pl-2 pb-1 text-left \">Re enter Password</label>\r\n                <input type=\"password\" value={rePassword} onChange={e => setRePassword(e.target.value)} className=\" text-sm flex-g px-3 py-2 text-white h-10 bg-transparent border-gray-400 border rounded-md outline-none focus:ring-1 focus:ring-blue-400 \" />\r\n              </div>\r\n              <button type=\"submit\" className=\" focus:outline-none flex items-center justify-center w-full mt-5 py-2 rounded-md duration-300 text-white hover:bg-opacity-90\" style={{backgroundColor: \"#454DF8\"}}>\r\n              {\r\n                  fetching ? (\r\n                    <>\r\n                      <ImSpinner2 className=\"text-white animate-spin mr-2\" />\r\n                      Submitting\r\n                    </>\r\n                  ) : \"Submit\"\r\n                }\r\n              </button>\r\n              <p className=\"text-left text-xs mt-1 text-white\">Already have an account? <Link to=\"/login\" className=\"text-blue-500\" style={{color: \"#454DF8\"}}> here</Link> </p>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default SignUpPage\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport Navbar from './Components/Navbar.Component/Navbar';\r\nimport LandingPage from './Pages/Landing.Page/LandingPage';\r\nimport SinglePostPage from './Pages/SinglePost.Page/SinglePostPage';\r\nimport LoginPage from './Pages/Login.Page/LoginPage';\r\nimport AllCompanies from './Pages/AllCompanies.Page/AllCompanies';\r\nimport CompanyDetails from './Pages/CompanyDetails.Page/CompanyDetails';\r\nimport CreatePost from './Pages/CreatePost.Page/CreatePost';\r\nimport SettingPage from './Pages/Setting.Page/SettingPage';\r\nimport { AuthContext } from './State/AuthContext';\r\nimport UserProfile from './Pages/UserProfile.Page/UserProfile';\r\nimport UserProfileComments from './Pages/UserProfile.Page/UserProfileComments';\r\nimport UserProfileLiked from './Pages/UserProfile.Page/UserProfileLiked';\r\nimport Search from './Pages/Search.Page/Search';\r\nimport Hiring from './Pages/Jobs.Page/Hiring';\r\nimport CreateJob from './Pages/CreateJob/CreateJob';\r\nimport MobileNavbar from './Components/Navbar.Component/MobileNavbar';\r\nimport SignUpPage from './Pages/SignUp.Page/SignUp';\r\n\r\nfunction App() {\r\n  const { checkUserLoggedIn } = useContext(AuthContext)\r\n\r\n  const [isMobileView, setIsMobileView] = useState(window.innerWidth > 750 ? false : true)\r\n\r\n  \r\n  const setWidth = () => {\r\n    setIsMobileView(window.innerWidth > 750 ? false : true)\r\n  }\r\n  \r\n  window.addEventListener('resize', setWidth)\r\n  \r\n  useEffect(() => {\r\n    setWidth()\r\n    checkUserLoggedIn()\r\n    console.log('hello')\r\n  }, [])\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n\r\n            <Switch>\r\n              <Route path=\"/login\" exact component={LoginPage} />\r\n              <Route path=\"/signup\" exact component={SignUpPage} />\r\n              <Route path=\"/\" exact>\r\n                <Navbar />\r\n                <LandingPage />\r\n                {\r\n                  isMobileView ? <MobileNavbar /> : \"\"\r\n                }\r\n              </Route>\r\n              <Route path=\"/post/:postID\" exact >\r\n                <Navbar />\r\n                <SinglePostPage />\r\n                {\r\n                  isMobileView ? <MobileNavbar /> : \"\"\r\n                }\r\n              </Route>\r\n              <Route path=\"/companies\" exact>\r\n                <Navbar />\r\n                <AllCompanies />\r\n                {\r\n                  isMobileView ? <MobileNavbar /> : \"\"\r\n                }\r\n              </Route>\r\n              <Route path=\"/companies/:companyName\" exact>\r\n                <Navbar />\r\n                <CompanyDetails />\r\n                {\r\n                  isMobileView ? <MobileNavbar /> : \"\"\r\n                }\r\n              </Route>\r\n              <Route path=\"/create\" exact>\r\n                <Navbar />\r\n                <CreatePost />\r\n                {\r\n                  isMobileView ? <MobileNavbar /> : \"\"\r\n                }\r\n              </Route>\r\n              <Route path=\"/add/job\" exact>\r\n                <Navbar/>\r\n                <CreateJob />\r\n                {\r\n                  isMobileView ? <MobileNavbar /> : \"\"\r\n                }\r\n              </Route>\r\n              <Route path=\"/settings\" exact>\r\n                <Navbar />\r\n                <SettingPage />\r\n                {\r\n                  isMobileView ? <MobileNavbar /> : \"\"\r\n                }\r\n              </Route>\r\n              <Route path=\"/user/:username\" exact>\r\n                <Navbar />\r\n                <UserProfile />\r\n                {\r\n                  isMobileView ? <MobileNavbar /> : \"\"\r\n                }\r\n              </Route>\r\n              <Route path=\"/user/:username/comments\" exact>\r\n                <Navbar />\r\n                <UserProfileComments />\r\n                {\r\n                  isMobileView ? <MobileNavbar /> : \"\"\r\n                }\r\n              </Route>\r\n              <Route path=\"/user/:username/liked\" exact>\r\n                <Navbar />\r\n                <UserProfileLiked />\r\n              </Route>\r\n              <Route path=\"/search\" >\r\n                <Navbar />\r\n                <Search />\r\n                {\r\n                  isMobileView ? <MobileNavbar /> : \"\"\r\n                }\r\n              </Route>\r\n              <Route path=\"/hiring\" >\r\n                <Navbar />\r\n                <Hiring />\r\n                {\r\n                  isMobileView ? <MobileNavbar /> : \"\"\r\n                }\r\n              </Route>\r\n            </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { AuthProvider } from './State/AuthContext';\r\nimport { ChakraProvider } from \"@chakra-ui/react\"\r\nimport { PostsProvider } from './State/PostsContext';\r\nimport { UserProfileProvider } from './State/UserProfileContext'\r\nimport { extendTheme } from \"@chakra-ui/react\"\r\n\r\nconst theme = extendTheme({\r\n  colors: {\r\n    greenFlair: {\r\n      100: \"#00AE81\",\r\n    },\r\n  },\r\n})\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ChakraProvider theme={theme}>\r\n      <AuthProvider>\r\n        <PostsProvider>\r\n          <UserProfileProvider>\r\n            <App />\r\n          </UserProfileProvider>\r\n        </PostsProvider>\r\n      </AuthProvider>\r\n    </ChakraProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}